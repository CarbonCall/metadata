// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

package org.carboncall.metadata;

/**
 * Protobuf type {@code carboncall.metadata.FactorAndSource}
 */
public final class FactorAndSource extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:carboncall.metadata.FactorAndSource)
    FactorAndSourceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FactorAndSource.newBuilder() to construct.
  private FactorAndSource(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FactorAndSource() {
    factorType_ = 0;
    factorUnit_ = 0;
    factorSource_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FactorAndSource();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FactorAndSource(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            factorType_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            factorUnit_ = rawValue;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            factorSource_ = s;
            break;
          }
          case 34: {
            org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder subBuilder = null;
            if (factorPrecision_ != null) {
              subBuilder = factorPrecision_.toBuilder();
            }
            factorPrecision_ = input.readMessage(org.carboncall.metadata.FactorAndSource.PrecisionMix.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(factorPrecision_);
              factorPrecision_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.carboncall.metadata.FactorAndSource.class, org.carboncall.metadata.FactorAndSource.Builder.class);
  }

  /**
   * Protobuf enum {@code carboncall.metadata.FactorAndSource.FactorType}
   */
  public enum FactorType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <code>ESTIMATED = 1;</code>
     */
    ESTIMATED(1),
    /**
     * <code>FACTORED = 2;</code>
     */
    FACTORED(2),
    /**
     * <code>MEASURED = 3;</code>
     */
    MEASURED(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <code>ESTIMATED = 1;</code>
     */
    public static final int ESTIMATED_VALUE = 1;
    /**
     * <code>FACTORED = 2;</code>
     */
    public static final int FACTORED_VALUE = 2;
    /**
     * <code>MEASURED = 3;</code>
     */
    public static final int MEASURED_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FactorType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FactorType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return ESTIMATED;
        case 2: return FACTORED;
        case 3: return MEASURED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FactorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FactorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FactorType>() {
            public FactorType findValueByNumber(int number) {
              return FactorType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.carboncall.metadata.FactorAndSource.getDescriptor().getEnumTypes().get(0);
    }

    private static final FactorType[] VALUES = values();

    public static FactorType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FactorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:carboncall.metadata.FactorAndSource.FactorType)
  }

  public interface PrecisionMixOrBuilder extends
      // @@protoc_insertion_point(interface_extends:carboncall.metadata.FactorAndSource.PrecisionMix)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *percentage of estimated or factored precision, 10 = 10%
     * </pre>
     *
     * <code>int32 low = 1;</code>
     * @return The low.
     */
    int getLow();

    /**
     * <pre>
     *percentage of indirect high quality precision, 20 = 20%
     * </pre>
     *
     * <code>int32 medium = 2;</code>
     * @return The medium.
     */
    int getMedium();

    /**
     * <pre>
     *percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
     * </pre>
     *
     * <code>int32 high = 3;</code>
     * @return The high.
     */
    int getHigh();
  }
  /**
   * Protobuf type {@code carboncall.metadata.FactorAndSource.PrecisionMix}
   */
  public static final class PrecisionMix extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:carboncall.metadata.FactorAndSource.PrecisionMix)
      PrecisionMixOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrecisionMix.newBuilder() to construct.
    private PrecisionMix(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrecisionMix() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PrecisionMix();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PrecisionMix(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              low_ = input.readInt32();
              break;
            }
            case 16: {

              medium_ = input.readInt32();
              break;
            }
            case 24: {

              high_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_PrecisionMix_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_PrecisionMix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.carboncall.metadata.FactorAndSource.PrecisionMix.class, org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder.class);
    }

    public static final int LOW_FIELD_NUMBER = 1;
    private int low_;
    /**
     * <pre>
     *percentage of estimated or factored precision, 10 = 10%
     * </pre>
     *
     * <code>int32 low = 1;</code>
     * @return The low.
     */
    @java.lang.Override
    public int getLow() {
      return low_;
    }

    public static final int MEDIUM_FIELD_NUMBER = 2;
    private int medium_;
    /**
     * <pre>
     *percentage of indirect high quality precision, 20 = 20%
     * </pre>
     *
     * <code>int32 medium = 2;</code>
     * @return The medium.
     */
    @java.lang.Override
    public int getMedium() {
      return medium_;
    }

    public static final int HIGH_FIELD_NUMBER = 3;
    private int high_;
    /**
     * <pre>
     *percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
     * </pre>
     *
     * <code>int32 high = 3;</code>
     * @return The high.
     */
    @java.lang.Override
    public int getHigh() {
      return high_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (low_ != 0) {
        output.writeInt32(1, low_);
      }
      if (medium_ != 0) {
        output.writeInt32(2, medium_);
      }
      if (high_ != 0) {
        output.writeInt32(3, high_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (low_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, low_);
      }
      if (medium_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, medium_);
      }
      if (high_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, high_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.carboncall.metadata.FactorAndSource.PrecisionMix)) {
        return super.equals(obj);
      }
      org.carboncall.metadata.FactorAndSource.PrecisionMix other = (org.carboncall.metadata.FactorAndSource.PrecisionMix) obj;

      if (getLow()
          != other.getLow()) return false;
      if (getMedium()
          != other.getMedium()) return false;
      if (getHigh()
          != other.getHigh()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOW_FIELD_NUMBER;
      hash = (53 * hash) + getLow();
      hash = (37 * hash) + MEDIUM_FIELD_NUMBER;
      hash = (53 * hash) + getMedium();
      hash = (37 * hash) + HIGH_FIELD_NUMBER;
      hash = (53 * hash) + getHigh();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.carboncall.metadata.FactorAndSource.PrecisionMix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.carboncall.metadata.FactorAndSource.PrecisionMix prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code carboncall.metadata.FactorAndSource.PrecisionMix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:carboncall.metadata.FactorAndSource.PrecisionMix)
        org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_PrecisionMix_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_PrecisionMix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.carboncall.metadata.FactorAndSource.PrecisionMix.class, org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder.class);
      }

      // Construct using org.carboncall.metadata.FactorAndSource.PrecisionMix.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        low_ = 0;

        medium_ = 0;

        high_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_PrecisionMix_descriptor;
      }

      @java.lang.Override
      public org.carboncall.metadata.FactorAndSource.PrecisionMix getDefaultInstanceForType() {
        return org.carboncall.metadata.FactorAndSource.PrecisionMix.getDefaultInstance();
      }

      @java.lang.Override
      public org.carboncall.metadata.FactorAndSource.PrecisionMix build() {
        org.carboncall.metadata.FactorAndSource.PrecisionMix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.carboncall.metadata.FactorAndSource.PrecisionMix buildPartial() {
        org.carboncall.metadata.FactorAndSource.PrecisionMix result = new org.carboncall.metadata.FactorAndSource.PrecisionMix(this);
        result.low_ = low_;
        result.medium_ = medium_;
        result.high_ = high_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.carboncall.metadata.FactorAndSource.PrecisionMix) {
          return mergeFrom((org.carboncall.metadata.FactorAndSource.PrecisionMix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.carboncall.metadata.FactorAndSource.PrecisionMix other) {
        if (other == org.carboncall.metadata.FactorAndSource.PrecisionMix.getDefaultInstance()) return this;
        if (other.getLow() != 0) {
          setLow(other.getLow());
        }
        if (other.getMedium() != 0) {
          setMedium(other.getMedium());
        }
        if (other.getHigh() != 0) {
          setHigh(other.getHigh());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.carboncall.metadata.FactorAndSource.PrecisionMix parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.carboncall.metadata.FactorAndSource.PrecisionMix) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int low_ ;
      /**
       * <pre>
       *percentage of estimated or factored precision, 10 = 10%
       * </pre>
       *
       * <code>int32 low = 1;</code>
       * @return The low.
       */
      @java.lang.Override
      public int getLow() {
        return low_;
      }
      /**
       * <pre>
       *percentage of estimated or factored precision, 10 = 10%
       * </pre>
       *
       * <code>int32 low = 1;</code>
       * @param value The low to set.
       * @return This builder for chaining.
       */
      public Builder setLow(int value) {
        
        low_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *percentage of estimated or factored precision, 10 = 10%
       * </pre>
       *
       * <code>int32 low = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLow() {
        
        low_ = 0;
        onChanged();
        return this;
      }

      private int medium_ ;
      /**
       * <pre>
       *percentage of indirect high quality precision, 20 = 20%
       * </pre>
       *
       * <code>int32 medium = 2;</code>
       * @return The medium.
       */
      @java.lang.Override
      public int getMedium() {
        return medium_;
      }
      /**
       * <pre>
       *percentage of indirect high quality precision, 20 = 20%
       * </pre>
       *
       * <code>int32 medium = 2;</code>
       * @param value The medium to set.
       * @return This builder for chaining.
       */
      public Builder setMedium(int value) {
        
        medium_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *percentage of indirect high quality precision, 20 = 20%
       * </pre>
       *
       * <code>int32 medium = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMedium() {
        
        medium_ = 0;
        onChanged();
        return this;
      }

      private int high_ ;
      /**
       * <pre>
       *percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
       * </pre>
       *
       * <code>int32 high = 3;</code>
       * @return The high.
       */
      @java.lang.Override
      public int getHigh() {
        return high_;
      }
      /**
       * <pre>
       *percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
       * </pre>
       *
       * <code>int32 high = 3;</code>
       * @param value The high to set.
       * @return This builder for chaining.
       */
      public Builder setHigh(int value) {
        
        high_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
       * </pre>
       *
       * <code>int32 high = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHigh() {
        
        high_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:carboncall.metadata.FactorAndSource.PrecisionMix)
    }

    // @@protoc_insertion_point(class_scope:carboncall.metadata.FactorAndSource.PrecisionMix)
    private static final org.carboncall.metadata.FactorAndSource.PrecisionMix DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.carboncall.metadata.FactorAndSource.PrecisionMix();
    }

    public static org.carboncall.metadata.FactorAndSource.PrecisionMix getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrecisionMix>
        PARSER = new com.google.protobuf.AbstractParser<PrecisionMix>() {
      @java.lang.Override
      public PrecisionMix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PrecisionMix(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PrecisionMix> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrecisionMix> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.carboncall.metadata.FactorAndSource.PrecisionMix getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int FACTOR_TYPE_FIELD_NUMBER = 1;
  private int factorType_;
  /**
   * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
   * @return The enum numeric value on the wire for factorType.
   */
  @java.lang.Override public int getFactorTypeValue() {
    return factorType_;
  }
  /**
   * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
   * @return The factorType.
   */
  @java.lang.Override public org.carboncall.metadata.FactorAndSource.FactorType getFactorType() {
    @SuppressWarnings("deprecation")
    org.carboncall.metadata.FactorAndSource.FactorType result = org.carboncall.metadata.FactorAndSource.FactorType.valueOf(factorType_);
    return result == null ? org.carboncall.metadata.FactorAndSource.FactorType.UNRECOGNIZED : result;
  }

  public static final int FACTOR_UNIT_FIELD_NUMBER = 2;
  private int factorUnit_;
  /**
   * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
   * @return The enum numeric value on the wire for factorUnit.
   */
  @java.lang.Override public int getFactorUnitValue() {
    return factorUnit_;
  }
  /**
   * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
   * @return The factorUnit.
   */
  @java.lang.Override public org.carboncall.metadata.Unit getFactorUnit() {
    @SuppressWarnings("deprecation")
    org.carboncall.metadata.Unit result = org.carboncall.metadata.Unit.valueOf(factorUnit_);
    return result == null ? org.carboncall.metadata.Unit.UNRECOGNIZED : result;
  }

  public static final int FACTOR_SOURCE_FIELD_NUMBER = 3;
  private volatile java.lang.Object factorSource_;
  /**
   * <code>string factor_source = 3;</code>
   * @return The factorSource.
   */
  @java.lang.Override
  public java.lang.String getFactorSource() {
    java.lang.Object ref = factorSource_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      factorSource_ = s;
      return s;
    }
  }
  /**
   * <code>string factor_source = 3;</code>
   * @return The bytes for factorSource.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFactorSourceBytes() {
    java.lang.Object ref = factorSource_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      factorSource_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FACTOR_PRECISION_FIELD_NUMBER = 4;
  private org.carboncall.metadata.FactorAndSource.PrecisionMix factorPrecision_;
  /**
   * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
   * @return Whether the factorPrecision field is set.
   */
  @java.lang.Override
  public boolean hasFactorPrecision() {
    return factorPrecision_ != null;
  }
  /**
   * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
   * @return The factorPrecision.
   */
  @java.lang.Override
  public org.carboncall.metadata.FactorAndSource.PrecisionMix getFactorPrecision() {
    return factorPrecision_ == null ? org.carboncall.metadata.FactorAndSource.PrecisionMix.getDefaultInstance() : factorPrecision_;
  }
  /**
   * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
   */
  @java.lang.Override
  public org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder getFactorPrecisionOrBuilder() {
    return getFactorPrecision();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (factorType_ != org.carboncall.metadata.FactorAndSource.FactorType.UNKNOWN.getNumber()) {
      output.writeEnum(1, factorType_);
    }
    if (factorUnit_ != org.carboncall.metadata.Unit.TONNE_CO2E.getNumber()) {
      output.writeEnum(2, factorUnit_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(factorSource_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, factorSource_);
    }
    if (factorPrecision_ != null) {
      output.writeMessage(4, getFactorPrecision());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (factorType_ != org.carboncall.metadata.FactorAndSource.FactorType.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, factorType_);
    }
    if (factorUnit_ != org.carboncall.metadata.Unit.TONNE_CO2E.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, factorUnit_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(factorSource_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, factorSource_);
    }
    if (factorPrecision_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getFactorPrecision());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.carboncall.metadata.FactorAndSource)) {
      return super.equals(obj);
    }
    org.carboncall.metadata.FactorAndSource other = (org.carboncall.metadata.FactorAndSource) obj;

    if (factorType_ != other.factorType_) return false;
    if (factorUnit_ != other.factorUnit_) return false;
    if (!getFactorSource()
        .equals(other.getFactorSource())) return false;
    if (hasFactorPrecision() != other.hasFactorPrecision()) return false;
    if (hasFactorPrecision()) {
      if (!getFactorPrecision()
          .equals(other.getFactorPrecision())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FACTOR_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + factorType_;
    hash = (37 * hash) + FACTOR_UNIT_FIELD_NUMBER;
    hash = (53 * hash) + factorUnit_;
    hash = (37 * hash) + FACTOR_SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getFactorSource().hashCode();
    if (hasFactorPrecision()) {
      hash = (37 * hash) + FACTOR_PRECISION_FIELD_NUMBER;
      hash = (53 * hash) + getFactorPrecision().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.carboncall.metadata.FactorAndSource parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.carboncall.metadata.FactorAndSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.carboncall.metadata.FactorAndSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.carboncall.metadata.FactorAndSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.carboncall.metadata.FactorAndSource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code carboncall.metadata.FactorAndSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:carboncall.metadata.FactorAndSource)
      org.carboncall.metadata.FactorAndSourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.carboncall.metadata.FactorAndSource.class, org.carboncall.metadata.FactorAndSource.Builder.class);
    }

    // Construct using org.carboncall.metadata.FactorAndSource.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      factorType_ = 0;

      factorUnit_ = 0;

      factorSource_ = "";

      if (factorPrecisionBuilder_ == null) {
        factorPrecision_ = null;
      } else {
        factorPrecision_ = null;
        factorPrecisionBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.carboncall.metadata.MetadataOuterClass.internal_static_carboncall_metadata_FactorAndSource_descriptor;
    }

    @java.lang.Override
    public org.carboncall.metadata.FactorAndSource getDefaultInstanceForType() {
      return org.carboncall.metadata.FactorAndSource.getDefaultInstance();
    }

    @java.lang.Override
    public org.carboncall.metadata.FactorAndSource build() {
      org.carboncall.metadata.FactorAndSource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.carboncall.metadata.FactorAndSource buildPartial() {
      org.carboncall.metadata.FactorAndSource result = new org.carboncall.metadata.FactorAndSource(this);
      result.factorType_ = factorType_;
      result.factorUnit_ = factorUnit_;
      result.factorSource_ = factorSource_;
      if (factorPrecisionBuilder_ == null) {
        result.factorPrecision_ = factorPrecision_;
      } else {
        result.factorPrecision_ = factorPrecisionBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.carboncall.metadata.FactorAndSource) {
        return mergeFrom((org.carboncall.metadata.FactorAndSource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.carboncall.metadata.FactorAndSource other) {
      if (other == org.carboncall.metadata.FactorAndSource.getDefaultInstance()) return this;
      if (other.factorType_ != 0) {
        setFactorTypeValue(other.getFactorTypeValue());
      }
      if (other.factorUnit_ != 0) {
        setFactorUnitValue(other.getFactorUnitValue());
      }
      if (!other.getFactorSource().isEmpty()) {
        factorSource_ = other.factorSource_;
        onChanged();
      }
      if (other.hasFactorPrecision()) {
        mergeFactorPrecision(other.getFactorPrecision());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.carboncall.metadata.FactorAndSource parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.carboncall.metadata.FactorAndSource) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int factorType_ = 0;
    /**
     * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
     * @return The enum numeric value on the wire for factorType.
     */
    @java.lang.Override public int getFactorTypeValue() {
      return factorType_;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
     * @param value The enum numeric value on the wire for factorType to set.
     * @return This builder for chaining.
     */
    public Builder setFactorTypeValue(int value) {
      
      factorType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
     * @return The factorType.
     */
    @java.lang.Override
    public org.carboncall.metadata.FactorAndSource.FactorType getFactorType() {
      @SuppressWarnings("deprecation")
      org.carboncall.metadata.FactorAndSource.FactorType result = org.carboncall.metadata.FactorAndSource.FactorType.valueOf(factorType_);
      return result == null ? org.carboncall.metadata.FactorAndSource.FactorType.UNRECOGNIZED : result;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
     * @param value The factorType to set.
     * @return This builder for chaining.
     */
    public Builder setFactorType(org.carboncall.metadata.FactorAndSource.FactorType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      factorType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.FactorType factor_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFactorType() {
      
      factorType_ = 0;
      onChanged();
      return this;
    }

    private int factorUnit_ = 0;
    /**
     * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
     * @return The enum numeric value on the wire for factorUnit.
     */
    @java.lang.Override public int getFactorUnitValue() {
      return factorUnit_;
    }
    /**
     * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
     * @param value The enum numeric value on the wire for factorUnit to set.
     * @return This builder for chaining.
     */
    public Builder setFactorUnitValue(int value) {
      
      factorUnit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
     * @return The factorUnit.
     */
    @java.lang.Override
    public org.carboncall.metadata.Unit getFactorUnit() {
      @SuppressWarnings("deprecation")
      org.carboncall.metadata.Unit result = org.carboncall.metadata.Unit.valueOf(factorUnit_);
      return result == null ? org.carboncall.metadata.Unit.UNRECOGNIZED : result;
    }
    /**
     * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
     * @param value The factorUnit to set.
     * @return This builder for chaining.
     */
    public Builder setFactorUnit(org.carboncall.metadata.Unit value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      factorUnit_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.carboncall.metadata.Unit factor_unit = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearFactorUnit() {
      
      factorUnit_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object factorSource_ = "";
    /**
     * <code>string factor_source = 3;</code>
     * @return The factorSource.
     */
    public java.lang.String getFactorSource() {
      java.lang.Object ref = factorSource_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        factorSource_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string factor_source = 3;</code>
     * @return The bytes for factorSource.
     */
    public com.google.protobuf.ByteString
        getFactorSourceBytes() {
      java.lang.Object ref = factorSource_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        factorSource_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string factor_source = 3;</code>
     * @param value The factorSource to set.
     * @return This builder for chaining.
     */
    public Builder setFactorSource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      factorSource_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string factor_source = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFactorSource() {
      
      factorSource_ = getDefaultInstance().getFactorSource();
      onChanged();
      return this;
    }
    /**
     * <code>string factor_source = 3;</code>
     * @param value The bytes for factorSource to set.
     * @return This builder for chaining.
     */
    public Builder setFactorSourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      factorSource_ = value;
      onChanged();
      return this;
    }

    private org.carboncall.metadata.FactorAndSource.PrecisionMix factorPrecision_;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.carboncall.metadata.FactorAndSource.PrecisionMix, org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder, org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder> factorPrecisionBuilder_;
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     * @return Whether the factorPrecision field is set.
     */
    public boolean hasFactorPrecision() {
      return factorPrecisionBuilder_ != null || factorPrecision_ != null;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     * @return The factorPrecision.
     */
    public org.carboncall.metadata.FactorAndSource.PrecisionMix getFactorPrecision() {
      if (factorPrecisionBuilder_ == null) {
        return factorPrecision_ == null ? org.carboncall.metadata.FactorAndSource.PrecisionMix.getDefaultInstance() : factorPrecision_;
      } else {
        return factorPrecisionBuilder_.getMessage();
      }
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public Builder setFactorPrecision(org.carboncall.metadata.FactorAndSource.PrecisionMix value) {
      if (factorPrecisionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        factorPrecision_ = value;
        onChanged();
      } else {
        factorPrecisionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public Builder setFactorPrecision(
        org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder builderForValue) {
      if (factorPrecisionBuilder_ == null) {
        factorPrecision_ = builderForValue.build();
        onChanged();
      } else {
        factorPrecisionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public Builder mergeFactorPrecision(org.carboncall.metadata.FactorAndSource.PrecisionMix value) {
      if (factorPrecisionBuilder_ == null) {
        if (factorPrecision_ != null) {
          factorPrecision_ =
            org.carboncall.metadata.FactorAndSource.PrecisionMix.newBuilder(factorPrecision_).mergeFrom(value).buildPartial();
        } else {
          factorPrecision_ = value;
        }
        onChanged();
      } else {
        factorPrecisionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public Builder clearFactorPrecision() {
      if (factorPrecisionBuilder_ == null) {
        factorPrecision_ = null;
        onChanged();
      } else {
        factorPrecision_ = null;
        factorPrecisionBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder getFactorPrecisionBuilder() {
      
      onChanged();
      return getFactorPrecisionFieldBuilder().getBuilder();
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    public org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder getFactorPrecisionOrBuilder() {
      if (factorPrecisionBuilder_ != null) {
        return factorPrecisionBuilder_.getMessageOrBuilder();
      } else {
        return factorPrecision_ == null ?
            org.carboncall.metadata.FactorAndSource.PrecisionMix.getDefaultInstance() : factorPrecision_;
      }
    }
    /**
     * <code>.carboncall.metadata.FactorAndSource.PrecisionMix factor_precision = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.carboncall.metadata.FactorAndSource.PrecisionMix, org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder, org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder> 
        getFactorPrecisionFieldBuilder() {
      if (factorPrecisionBuilder_ == null) {
        factorPrecisionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.carboncall.metadata.FactorAndSource.PrecisionMix, org.carboncall.metadata.FactorAndSource.PrecisionMix.Builder, org.carboncall.metadata.FactorAndSource.PrecisionMixOrBuilder>(
                getFactorPrecision(),
                getParentForChildren(),
                isClean());
        factorPrecision_ = null;
      }
      return factorPrecisionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:carboncall.metadata.FactorAndSource)
  }

  // @@protoc_insertion_point(class_scope:carboncall.metadata.FactorAndSource)
  private static final org.carboncall.metadata.FactorAndSource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.carboncall.metadata.FactorAndSource();
  }

  public static org.carboncall.metadata.FactorAndSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FactorAndSource>
      PARSER = new com.google.protobuf.AbstractParser<FactorAndSource>() {
    @java.lang.Override
    public FactorAndSource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FactorAndSource(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FactorAndSource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FactorAndSource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.carboncall.metadata.FactorAndSource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

