// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metadata.proto

package org.carboncall.metadata;

/**
 * Protobuf enum {@code carboncall.metadata.ReportingStandard}
 */
public enum ReportingStandard
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>G_A_A_P = 0;</code>
   */
  G_A_A_P(0),
  /**
   * <code>I_F_R_S = 1;</code>
   */
  I_F_R_S(1),
  /**
   * <code>I_S_S_B = 2;</code>
   */
  I_S_S_B(2),
  /**
   * <code>E_F_R_A_G = 3;</code>
   */
  E_F_R_A_G(3),
  /**
   * <pre>
   *TODO: add more
   * </pre>
   *
   * <code>G_R_I = 4;</code>
   */
  G_R_I(4),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>G_A_A_P = 0;</code>
   */
  public static final int G_A_A_P_VALUE = 0;
  /**
   * <code>I_F_R_S = 1;</code>
   */
  public static final int I_F_R_S_VALUE = 1;
  /**
   * <code>I_S_S_B = 2;</code>
   */
  public static final int I_S_S_B_VALUE = 2;
  /**
   * <code>E_F_R_A_G = 3;</code>
   */
  public static final int E_F_R_A_G_VALUE = 3;
  /**
   * <pre>
   *TODO: add more
   * </pre>
   *
   * <code>G_R_I = 4;</code>
   */
  public static final int G_R_I_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ReportingStandard valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ReportingStandard forNumber(int value) {
    switch (value) {
      case 0: return G_A_A_P;
      case 1: return I_F_R_S;
      case 2: return I_S_S_B;
      case 3: return E_F_R_A_G;
      case 4: return G_R_I;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ReportingStandard>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ReportingStandard> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ReportingStandard>() {
          public ReportingStandard findValueByNumber(int number) {
            return ReportingStandard.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.carboncall.metadata.MetadataOuterClass.getDescriptor().getEnumTypes().get(5);
  }

  private static final ReportingStandard[] VALUES = values();

  public static ReportingStandard valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ReportingStandard(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:carboncall.metadata.ReportingStandard)
}

