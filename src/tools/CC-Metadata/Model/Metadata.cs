// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: metadata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CarbonCall.Metadata {

  /// <summary>Holder for reflection information generated from metadata.proto</summary>
  public static partial class MetadataReflection {

    #region Descriptor
    /// <summary>File descriptor for metadata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MetadataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXRhZGF0YS5wcm90bxITY2FyYm9uY2FsbC5tZXRhZGF0YSJoChRTdXN0",
            "YWluYWJpbGl0eVJlcG9ydBIPCgdnX3JfaV9kGAEgASgJEi8KCG1ldGFkYXRh",
            "GAIgASgLMh0uY2FyYm9uY2FsbC5tZXRhZGF0YS5NZXRhZGF0YRIOCgZyZXBv",
            "cnQYAyABKAkigAkKCE1ldGFkYXRhEg8KB2dfcl9pX2QYASABKAkSHwoXb3Jn",
            "YW5pemF0aW9uX2lkZW50aWZpZXIYAiABKAkSGQoRb3JnYW5pemF0aW9uX25h",
            "bWUYAyABKAkSOgoIZG9taWNpbGUYBCABKA4yKC5jYXJib25jYWxsLm1ldGFk",
            "YXRhLklTTzMxNjZfQ291bnRyeUNvZGUSRQoTb3BlcmF0aW5nX2NvdW50cmll",
            "cxgFIAMoDjIoLmNhcmJvbmNhbGwubWV0YWRhdGEuSVNPMzE2Nl9Db3VudHJ5",
            "Q29kZRIwCglsYW5ndWFnZXMYBiADKA4yHS5jYXJib25jYWxsLm1ldGFkYXRh",
            "Lkxhbmd1YWdlEjQKC3JlcG9ydF90eXBlGAcgASgOMh8uY2FyYm9uY2FsbC5t",
            "ZXRhZGF0YS5SZXBvcnRUeXBlEhkKEXJlcG9ydF9pc3N1ZV9kYXRlGAggASgJ",
            "EjkKEHJlcG9ydGluZ19wZXJpb2QYCSABKAsyHy5jYXJib25jYWxsLm1ldGFk",
            "YXRhLlRpbWVQZXJpb2QSFwoPcmVwb3J0X3JlcGxhY2VzGAogASgJEhAKCGxv",
            "Y2F0aW9uGAsgASgJEi8KCGluZHVzdHJ5GAwgASgLMh0uY2FyYm9uY2FsbC5t",
            "ZXRhZGF0YS5JbmR1c3RyeRITCgtwZXJmb3JtYW5jZRgNIAEoCRIxCglnb3Zl",
            "cmFuY2UYDiABKAsyHi5jYXJib25jYWxsLm1ldGFkYXRhLkdvdmVyYW5jZRI1",
            "CgttZXRob2RvbG9neRgPIAEoCzIgLmNhcmJvbmNhbGwubWV0YWRhdGEuTWV0",
            "aG9kb2xvZ3kSOAoNcmVwb3J0X2Zvcm1hdBgQIAEoDjIhLmNhcmJvbmNhbGwu",
            "bWV0YWRhdGEuUmVwb3J0Rm9ybWF0EkIKEnJlcG9ydGluZ19zdGFuZGFyZBgR",
            "IAEoDjImLmNhcmJvbmNhbGwubWV0YWRhdGEuUmVwb3J0aW5nU3RhbmRhcmQS",
            "EQoJYXNzdXJhbmNlGBIgASgJEhQKDHByaW9yX3JlcG9ydBgTIAEoCRITCgty",
            "ZXBvcnRfaGFzaBgUIAEoCRIxCgphY3Rpdml0aWVzGBUgAygLMh0uY2FyYm9u",
            "Y2FsbC5tZXRhZGF0YS5BY3Rpdml0eRI0Cg5yZXBvcnRfY29udGV4dBgWIAMo",
            "CzIcLmNhcmJvbmNhbGwubWV0YWRhdGEuTWV0YXRhZxI/ChFwcm9wZXJ0eV9j",
            "b250ZXh0cxgXIAMoCzIkLmNhcmJvbmNhbGwubWV0YWRhdGEuUHJvcGVydHlD",
            "b250ZXh0EkQKFG1ldGF0ZGF0YV9leHRlbnNpb25zGBggAygLMiYuY2FyYm9u",
            "Y2FsbC5tZXRhZGF0YS5NZXRhZGF0YUV4dGVuc2lvbhJGCg5wX2ZfZXh0ZW5z",
            "aW9ucxgZIAMoCzIuLmNhcmJvbmNhbGwubWV0YWRhdGEuUHJvZHVjdEZvb3Rw",
            "cmludEV4dGVuc2lvbhIXCg9yZWxhdGVkX3JlcG9ydHMYGiADKAkibAoZUHJv",
            "ZHVjdEZvb3RwcmludEV4dGVuc2lvbhIMCgRwZklkGAEgASgJEkEKE3BfY19m",
            "X3Byb3BlcnR5X2RhdGEYAiADKAsyJC5jYXJib25jYWxsLm1ldGFkYXRhLlBy",
            "b3BlcnR5Q29udGV4dCKNAwoIQWN0aXZpdHkSFQoNYWN0aXZpdHlfdHlwZRgB",
            "IAEoCRIyCg91bml0X29mX21lYXN1cmUYAiABKA4yGS5jYXJib25jYWxsLm1l",
            "dGFkYXRhLlVuaXQSFwoPYWN0aXZpdHlfYW1vdW50GAMgASgJEjgKD2FjdGl2",
            "aXR5X3BlcmlvZBgEIAEoCzIfLmNhcmJvbmNhbGwubWV0YWRhdGEuVGltZVBl",
            "cmlvZBIcChRhY3Rpdml0eV9kZXNjcmlwdGlvbhgFIAEoCRJCChFhY3Rpdml0",
            "eV9sb2NhdGlvbhgGIAEoCzInLmNhcmJvbmNhbGwubWV0YWRhdGEuR2VvZ3Jh",
            "cGhpY0xvY2F0aW9uEkgKGmFjdGl2aXR5X2ZhY3Rvcl9hbmRfc291cmNlGAcg",
            "ASgLMiQuY2FyYm9uY2FsbC5tZXRhZGF0YS5GYWN0b3JBbmRTb3VyY2USNwoQ",
            "cmVsYXRlZF9tZXRhZGF0YRgIIAMoCzIdLmNhcmJvbmNhbGwubWV0YWRhdGEu",
            "TWV0YWxpbmsi7AIKD0ZhY3RvckFuZFNvdXJjZRJECgtmYWN0b3JfdHlwZRgB",
            "IAEoDjIvLmNhcmJvbmNhbGwubWV0YWRhdGEuRmFjdG9yQW5kU291cmNlLkZh",
            "Y3RvclR5cGUSLgoLZmFjdG9yX3VuaXQYAiABKA4yGS5jYXJib25jYWxsLm1l",
            "dGFkYXRhLlVuaXQSFQoNZmFjdG9yX3NvdXJjZRgDIAEoCRJLChBmYWN0b3Jf",
            "cHJlY2lzaW9uGAQgASgLMjEuY2FyYm9uY2FsbC5tZXRhZGF0YS5GYWN0b3JB",
            "bmRTb3VyY2UuUHJlY2lzaW9uTWl4GjkKDFByZWNpc2lvbk1peBILCgNsb3cY",
            "ASABKAUSDgoGbWVkaXVtGAIgASgFEgwKBGhpZ2gYAyABKAUiRAoKRmFjdG9y",
            "VHlwZRILCgdVTktOT1dOEAASDQoJRVNUSU1BVEVEEAESDAoIRkFDVE9SRUQQ",
            "AhIMCghNRUFTVVJFRBADIqcDCgtNZXRob2RvbG9neRJKChBtZXRob2RvbG9n",
            "eV90eXBlGAEgASgOMjAuY2FyYm9uY2FsbC5tZXRhZGF0YS5NZXRob2RvbG9n",
            "eS5NZXRob2RvbG9neVR5cGUSLgomcGVyY2VudGFnZV9vZl90b3RhbF9wb3J0",
            "Zm9saW9fcmVwb3J0ZWQYAiABKAkSLAokcGVyY2VudGFnZV9vZl9lc3RpbWF0",
            "ZWRfY2FsY3VsYXRpb25zGAMgASgJEkwKEWJvdW5kYXJ5X2FwcHJvYWNoGAQg",
            "ASgOMjEuY2FyYm9uY2FsbC5tZXRhZGF0YS5NZXRob2RvbG9neS5Cb3VuZGFy",
            "eUFwcHJvYWNoIkoKD01ldGhvZG9sb2d5VHlwZRILCgdVTktOT1dOEAASEAoM",
            "R0hHX1BST1RPQ09MEAESDQoJSVNPXzE0MDY3EAISCQoFT1RIRVIQZCJUChBC",
            "b3VuZGFyeUFwcHJvYWNoEhcKE09QRVJBVElPTkFMX0NPTlRST0wQABIVChFG",
            "SU5BTkNJQUxfQ09OVFJPTBABEhAKDEVRVUlUWV9TSEFSRRACIlIKCUdvdmVy",
            "YW5jZRIUCgxpbnRlbmRlZF91c2UYASABKAkSGQoRcmVzdHJpY3RlZF9hY2Nl",
            "c3MYAiABKAgSFAoMcmVwb3J0X293bmVyGAMgASgJIjIKClRpbWVQZXJpb2QS",
            "EgoKc3RhcnRfZGF0ZRgBIAEoCRIQCghlbmRfZGF0ZRgCIAEoCSJ0ChJHZW9n",
            "cmFwaGljTG9jYXRpb24SEQoJbG9uZ2l0dWRlGAEgASgJEhAKCGxhdGl0dWRl",
            "GAIgASgJEhcKD2dlb19qc29uX29yX2ttbBgDIAEoCRIgChhnZW9ncmFwaGlj",
            "X2xvY2F0aW9uX2ZpbGUYBCABKAkiXgoHTWV0YXRhZxILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAkSNwoQcmVsYXRlZF9tZXRhZGF0YRgDIAMoCzIdLmNh",
            "cmJvbmNhbGwubWV0YWRhdGEuTWV0YWxpbmsikQEKD1Byb3BlcnR5Q29udGV4",
            "dBIVCg1wcm9wZXJ0eV9uYW1lGAEgASgJEi4KCG1ldGF0YWdzGAIgAygLMhwu",
            "Y2FyYm9uY2FsbC5tZXRhZGF0YS5NZXRhdGFnEjcKEHJlbGF0ZWRfbWV0YWRh",
            "dGEYAyADKAsyHS5jYXJib25jYWxsLm1ldGFkYXRhLk1ldGFsaW5rIikKCE1l",
            "dGFsaW5rEh0KFXJlbGF0ZWRfbWV0YWRhdGFfcGF0aBgBIAEoCSJMChFNZXRh",
            "ZGF0YUV4dGVuc2lvbhISCgpkYXRhU2NoZW1hGAEgASgJEhUKDWRvY3VtZW50",
            "YXRpb24YAiABKAkSDAoEZGF0YRgDIAEoCSJRCghJbmR1c3RyeRI3CgZwcmVm",
            "aXgYASABKA4yJy5jYXJib25jYWxsLm1ldGFkYXRhLkluZHVzdHJ5Q29kZVBy",
            "ZWZpeBIMCgRjb2RlGAIgASgJKt0SChNJU08zMTY2X0NvdW50cnlDb2RlEgsK",
            "B1VOS05PV04QABIHCgNBX0YQARIHCgNBX1gQAhIHCgNBX0wQAxIHCgNEX1oQ",
            "BBIHCgNBX1MQBRIHCgNBX0QQBhIHCgNBX08QBxIHCgNBX0kQCBIHCgNBX1EQ",
            "CRIHCgNBX0cQChIHCgNBX1IQCxIHCgNBX00QDBIHCgNBX1cQDRIHCgNBX1UQ",
            "DhIHCgNBX1QQDxIHCgNBX1oQEBIHCgNCX1MQERIHCgNCX0gQEhIHCgNCX0QQ",
            "ExIHCgNCX0IQFBIHCgNCX1kQFRIHCgNCX0UQFhIHCgNCX1oQFxIHCgNCX0oQ",
            "GBIHCgNCX00QGRIHCgNCX1QQGhIHCgNCX08QGxIHCgNCX1EQHBIHCgNCX0EQ",
            "HRIHCgNCX1cQHhIHCgNCX1YQHxIHCgNCX1IQIBIHCgNJX08QIRIHCgNCX04Q",
            "IhIHCgNCX0cQIxIHCgNCX0YQJBIHCgNCX0kQJRIHCgNDX1YQJhIHCgNLX0gQ",
            "JxIHCgNDX00QKBIHCgNDX0EQKRIHCgNLX1kQKhIHCgNDX0YQKxIHCgNUX0QQ",
            "LBIHCgNDX0wQLRIHCgNDX04QLhIHCgNDX1gQLxIHCgNDX0MQMBIHCgNDX08Q",
            "MRIHCgNLX00QMhIHCgNDX0cQMxIHCgNDX0QQNBIHCgNDX0sQNRIHCgNDX1IQ",
            "NhIHCgNDX0kQNxIHCgNIX1IQOBIHCgNDX1UQORIHCgNDX1cQOhIHCgNDX1kQ",
            "OxIHCgNDX1oQPBIHCgNEX0sQPRIHCgNEX0oQPhIHCgNEX00QPxIHCgNEX08Q",
            "QBIHCgNFX0MQQRIHCgNFX0cQQhIHCgNTX1YQQxIHCgNHX1EQRBIHCgNFX1IQ",
            "RRIHCgNFX0UQRhIHCgNFX1QQRxIHCgNGX0sQSBIHCgNGX08QSRIHCgNGX0oQ",
            "ShIHCgNGX0kQSxIHCgNGX1IQTBIHCgNHX0YQTRIHCgNQX0YQThIHCgNUX0YQ",
            "TxIHCgNHX0EQUBIHCgNHX00QURIHCgNHX0UQUhIHCgNEX0UQUxIHCgNHX0gQ",
            "VBIHCgNHX0kQVRIHCgNHX1IQVhIHCgNHX0wQVxIHCgNHX0QQWBIHCgNHX1AQ",
            "WRIHCgNHX1UQWhIHCgNHX1QQWxIHCgNHX0cQXBIHCgNHX04QXRIHCgNHX1cQ",
            "XhIHCgNHX1kQXxIHCgNIX1QQYBIHCgNIX00QYRIHCgNWX0EQYhIHCgNIX04Q",
            "YxIHCgNIX0sQZBIHCgNIX1UQZRIHCgNJX1MQZhIHCgNJX04QZxIHCgNJX0QQ",
            "aBIHCgNJX1IQaRIHCgNJX1EQahIHCgNJX0UQaxIHCgNJX00QbBIHCgNJX0wQ",
            "bRIHCgNJX1QQbhIHCgNKX00QbxIHCgNKX1AQcBIHCgNKX0UQcRIHCgNKX08Q",
            "chIHCgNLX1oQcxIHCgNLX0UQdBIHCgNLX0kQdRIHCgNLX1AQdhIHCgNLX1IQ",
            "dxIHCgNLX1cQeBIHCgNLX0cQeRIHCgNMX0EQehIHCgNMX1YQexIHCgNMX0IQ",
            "fBIHCgNMX1MQfRIHCgNMX1IQfhIHCgNMX1kQfxIICgNMX0kQgAESCAoDTF9U",
            "EIEBEggKA0xfVRCCARIICgNNX08QgwESCAoDTV9LEIQBEggKA01fRxCFARII",
            "CgNNX1cQhgESCAoDTV9ZEIcBEggKA01fVhCIARIICgNNX0wQiQESCAoDTV9U",
            "EIoBEggKA01fSBCLARIICgNNX1EQjAESCAoDTV9SEI0BEggKA01fVRCOARII",
            "CgNZX1QQjwESCAoDTV9YEJABEggKA0ZfTRCRARIICgNNX0QQkgESCAoDTV9D",
            "EJMBEggKA01fThCUARIICgNNX0UQlQESCAoDTV9TEJYBEggKA01fQRCXARII",
            "CgNNX1oQmAESCAoDTV9NEJkBEggKA05fQRCaARIICgNOX1IQmwESCAoDTl9Q",
            "EJwBEggKA05fTBCdARIICgNOX0MQngESCAoDTl9aEJ8BEggKA05fSRCgARII",
            "CgNOX0UQoQESCAoDTl9HEKIBEggKA05fVRCjARIICgNOX0YQpAESCAoDTV9Q",
            "EKUBEggKA05fTxCmARIICgNPX00QpwESCAoDUF9LEKgBEggKA1BfVxCpARII",
            "CgNQX1MQqgESCAoDUF9BEKsBEggKA1BfRxCsARIICgNQX1kQrQESCAoDUF9F",
            "EK4BEggKA1BfSBCvARIICgNQX04QsAESCAoDUF9MELEBEggKA1BfVBCyARII",
            "CgNQX1IQswESCAoDUV9BELQBEggKA1JfRRC1ARIICgNSX08QtgESCAoDUl9V",
            "ELcBEggKA1JfVxC4ARIICgNCX0wQuQESCAoDU19IELoBEggKA0tfThC7ARII",
            "CgNMX0MQvAESCAoDTV9GEL0BEggKA1BfTRC+ARIICgNWX0MQvwESCAoDV19T",
            "EMABEggKA1NfTRDBARIICgNTX1QQwgESCAoDU19BEMMBEggKA1NfThDEARII",
            "CgNSX1MQxQESCAoDU19DEMYBEggKA1NfTBDHARIICgNTX0cQyAESCAoDU19Y",
            "EMkBEggKA1NfSxDKARIICgNTX0kQywESCAoDU19CEMwBEggKA1NfTxDNARII",
            "CgNaX0EQzgESCAoDR19TEM8BEggKA1NfUxDQARIICgNFX1MQ0QESCAoDTF9L",
            "ENIBEggKA1NfRBDTARIICgNTX1IQ1AESCAoDU19KENUBEggKA1NfWhDWARII",
            "CgNTX0UQ1wESCAoDQ19IENgBEggKA1NfWRDZARIICgNUX1cQ2gESCAoDVF9K",
            "ENsBEggKA1RfWhDcARIICgNUX0gQ3QESCAoDVF9MEN4BEggKA1RfRxDfARII",
            "CgNUX0sQ4AESCAoDVF9PEOEBEggKA1RfVBDiARIICgNUX04Q4wESCAoDVF9S",
            "EOQBEggKA1RfTRDlARIICgNUX0MQ5gESCAoDVF9WEOcBEggKA1VfRxDoARII",
            "CgNVX0EQ6QESCAoDQV9FEOoBEggKA0dfQhDrARIICgNVX1MQ7AESCAoDVV9N",
            "EO0BEggKA1VfWRDuARIICgNVX1oQ7wESCAoDVl9VEPABEggKA1ZfRRDxARII",
            "CgNWX04Q8gESCAoDVl9HEPMBEggKA1ZfSRD0ARIICgNXX0YQ9QESCAoDRV9I",
            "EPYBEggKA1lfRRD3ARIICgNaX00Q+AESCAoDWl9XEPkBKioKCExhbmd1YWdl",
            "EgYKAmVuEAASBgoCZXMQARIGCgJ6aBACEgYKAmZyEAMq0QEKClJlcG9ydFR5",
            "cGUSFQoRSU5URUdSQVRFRF9SRVBPUlQQABIUChBGSU5BTkNJQUxfUkVQT1JU",
            "EAESGQoVU1VTVEFJTkFCSUxJVFlfUkVQT1JUEAISEQoNQU5OVUFMX1JFUE9S",
            "VBADEhMKD1BST1hZX1NUQVRFTUVOVBAEEhoKFlJFR0lTVFJBVElPTl9TVEFU",
            "RU1FTlQQBRIUChBRVUFSVEVSTFlfUkVQT1JUEAYSFgoSSEFMRl9ZRUFSTFlf",
            "UkVQT1JUEAcSCQoFT1RIRVIQCCpIChJJbmR1c3RyeUNvZGVQcmVmaXgSCwoH",
            "SV9TX0lfQxAAEg0KCU5fQV9JX0NfUxABEgsKB0dfSV9DX1MQAhIJCgVTX0lf",
            "QxADKjYKDFJlcG9ydEZvcm1hdBIJCgVQX0RfRhAAEg0KCWlfWF9CX1JfTBAB",
            "EgwKCE9QRU5fWE1MEAIqVAoRUmVwb3J0aW5nU3RhbmRhcmQSCwoHR19BX0Ff",
            "UBAAEgsKB0lfRl9SX1MQARILCgdJX1NfU19CEAISDQoJRV9GX1JfQV9HEAMS",
            "CQoFR19SX0kQBCqKBwoEVW5pdBIOCgpUT05ORV9DTzJFEAASDQoJVE9OTkVf",
            "Q08yEAESDQoJVE9OTkVfQ0g0EAISDQoJVE9OTkVfTjJPEAMSCwoHVE9OTkVf",
            "UxAEEg0KCVRPTk5FX05PWBAFEg0KCVRPTk5FX1NPWBAGEg4KClRPTk5FX1BN",
            "MTAQBxIPCgtUT05ORV9QTTJfNRAIEg0KCVRPTk5FX1ZPQxAJEg0KCVRPTk5F",
            "X05IMxAKEg0KCVRPTk5FX1BGQxALEg0KCVRPTk5FX1NGNhAMEg0KCVRPTk5F",
            "X0hGQxANEg0KCVRPTk5FX0NGQxAOEg8KC1RPTk5FX0hGQzIzEA8SDwoLVE9O",
            "TkVfSEZDMzIQEBIQCgxUT05ORV9IRkMxMjUQERIRCg1UT05ORV9IRkMxMzRh",
            "EBISEQoNVE9OTkVfSEZDMTQzYRATEhIKDlRPTk5FX0hGQzIyN2VhEBQSEgoO",
            "VE9OTkVfSEZDMjQ1ZmEQFRITCg9UT05ORV9IRkMzNjVtZmMQFhIUChBUT05O",
            "RV9IRkM0MzEwbWVlEBcSDgoKVE9OTkVfQzJGNhAYEg4KClRPTk5FX0MzRjgQ",
            "GRIPCgtUT05ORV9DNEYxMBAaEg8KC1RPTk5FX0M1RjEyEBsSDwoLVE9OTkVf",
            "QzZGMTQQHBIPCgtUT05ORV9DN0YxNhAdEg8KC1RPTk5FX0M4RjE4EB4SEAoM",
            "VE9OTkVfQzEwRjE4EB8SEAoMVE9OTkVfQzEyRjE4ECASEAoMVE9OTkVfQzE0",
            "RjE4ECESEAoMVE9OTkVfQzE2RjE4ECISEAoMVE9OTkVfQzE4RjE4ECMSEAoM",
            "VE9OTkVfQzIwRjE4ECQSEAoMVE9OTkVfQzIyRjE4ECUSEAoMVE9OTkVfQzI0",
            "RjE4ECYSEAoMVE9OTkVfQzI2RjE4ECcSEAoMVE9OTkVfQzI4RjE4ECgSEAoM",
            "VE9OTkVfQzMwRjE4ECkSEAoMVE9OTkVfQzMyRjE4ECoSEAoMVE9OTkVfQzM0",
            "RjE4ECsSCQoFTElURVIQZBIMCghLSUxPR1JBTRBlEg8KC0NVQklDX01FVEVS",
            "EGYSDAoIS0lMT1dBVFQQZxIMCghNRUdBV0FUVBBoEg0KCU1FR0FKVU9MRRBp",
            "Eg0KCUtJTE9NRVRFUhBqEhAKDFNRVUFSRV9NRVRFUhBrEgkKBVRPTk5FEGwS",
            "CAoETVdfSBBtEggKBEtXX0gQbkIxChdvcmcuY2FyYm9uY2FsbC5tZXRhZGF0",
            "YVABqgITQ2FyYm9uQ2FsbC5NZXRhZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::CarbonCall.Metadata.ISO3166_CountryCode), typeof(global::CarbonCall.Metadata.Language), typeof(global::CarbonCall.Metadata.ReportType), typeof(global::CarbonCall.Metadata.IndustryCodePrefix), typeof(global::CarbonCall.Metadata.ReportFormat), typeof(global::CarbonCall.Metadata.ReportingStandard), typeof(global::CarbonCall.Metadata.Unit), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.SustainabilityReport), global::CarbonCall.Metadata.SustainabilityReport.Parser, new[]{ "GRID", "Metadata", "Report" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Metadata), global::CarbonCall.Metadata.Metadata.Parser, new[]{ "GRID", "OrganizationIdentifier", "OrganizationName", "Domicile", "OperatingCountries", "Languages", "ReportType", "ReportIssueDate", "ReportingPeriod", "ReportReplaces", "Location", "Industry", "Performance", "Goverance", "Methodology", "ReportFormat", "ReportingStandard", "Assurance", "PriorReport", "ReportHash", "Activities", "ReportContext", "PropertyContexts", "MetatdataExtensions", "PFExtensions", "RelatedReports" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.ProductFootprintExtension), global::CarbonCall.Metadata.ProductFootprintExtension.Parser, new[]{ "PfId", "PCFPropertyData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Activity), global::CarbonCall.Metadata.Activity.Parser, new[]{ "ActivityType", "UnitOfMeasure", "ActivityAmount", "ActivityPeriod", "ActivityDescription", "ActivityLocation", "ActivityFactorAndSource", "RelatedMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.FactorAndSource), global::CarbonCall.Metadata.FactorAndSource.Parser, new[]{ "FactorType", "FactorUnit", "FactorSource", "FactorPrecision" }, null, new[]{ typeof(global::CarbonCall.Metadata.FactorAndSource.Types.FactorType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix), global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix.Parser, new[]{ "Low", "Medium", "High" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Methodology), global::CarbonCall.Metadata.Methodology.Parser, new[]{ "MethodologyType", "PercentageOfTotalPortfolioReported", "PercentageOfEstimatedCalculations", "BoundaryApproach" }, null, new[]{ typeof(global::CarbonCall.Metadata.Methodology.Types.MethodologyType), typeof(global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Goverance), global::CarbonCall.Metadata.Goverance.Parser, new[]{ "IntendedUse", "RestrictedAccess", "ReportOwner" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.TimePeriod), global::CarbonCall.Metadata.TimePeriod.Parser, new[]{ "StartDate", "EndDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.GeographicLocation), global::CarbonCall.Metadata.GeographicLocation.Parser, new[]{ "Longitude", "Latitude", "GeoJsonOrKml", "GeographicLocationFile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Metatag), global::CarbonCall.Metadata.Metatag.Parser, new[]{ "Key", "Value", "RelatedMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.PropertyContext), global::CarbonCall.Metadata.PropertyContext.Parser, new[]{ "PropertyName", "Metatags", "RelatedMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Metalink), global::CarbonCall.Metadata.Metalink.Parser, new[]{ "RelatedMetadataPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.MetadataExtension), global::CarbonCall.Metadata.MetadataExtension.Parser, new[]{ "DataSchema", "Documentation", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CarbonCall.Metadata.Industry), global::CarbonCall.Metadata.Industry.Parser, new[]{ "Prefix", "Code" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///ISO 3166-1 alpha-2 country codes
  /// </summary>
  public enum ISO3166_CountryCode {
    /// <summary>
    ///unknown country
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    ///"Afghanistan" 
    /// </summary>
    [pbr::OriginalName("A_F")] AF = 1,
    /// <summary>
    ///"Åland Islands" 
    /// </summary>
    [pbr::OriginalName("A_X")] AX = 2,
    /// <summary>
    ///"Albania" 
    /// </summary>
    [pbr::OriginalName("A_L")] AL = 3,
    /// <summary>
    ///"Algeria" 
    /// </summary>
    [pbr::OriginalName("D_Z")] DZ = 4,
    /// <summary>
    ///"American Samoa" 
    /// </summary>
    [pbr::OriginalName("A_S")] AS = 5,
    /// <summary>
    ///"Andorra" 
    /// </summary>
    [pbr::OriginalName("A_D")] AD = 6,
    /// <summary>
    ///"Angola" 
    /// </summary>
    [pbr::OriginalName("A_O")] AO = 7,
    /// <summary>
    ///"Anguilla" 
    /// </summary>
    [pbr::OriginalName("A_I")] AI = 8,
    /// <summary>
    ///"Antarctica" 
    /// </summary>
    [pbr::OriginalName("A_Q")] AQ = 9,
    /// <summary>
    ///"Antigua and Barbuda" 
    /// </summary>
    [pbr::OriginalName("A_G")] AG = 10,
    /// <summary>
    ///"Argentina" 
    /// </summary>
    [pbr::OriginalName("A_R")] AR = 11,
    /// <summary>
    ///"Armenia" 
    /// </summary>
    [pbr::OriginalName("A_M")] AM = 12,
    /// <summary>
    ///"Aruba" 
    /// </summary>
    [pbr::OriginalName("A_W")] AW = 13,
    /// <summary>
    ///"Australia" 
    /// </summary>
    [pbr::OriginalName("A_U")] AU = 14,
    /// <summary>
    ///"Austria" 
    /// </summary>
    [pbr::OriginalName("A_T")] AT = 15,
    /// <summary>
    ///"Azerbaijan" 
    /// </summary>
    [pbr::OriginalName("A_Z")] AZ = 16,
    /// <summary>
    ///"Bahamas" 
    /// </summary>
    [pbr::OriginalName("B_S")] BS = 17,
    /// <summary>
    ///"Bahrain" 
    /// </summary>
    [pbr::OriginalName("B_H")] BH = 18,
    /// <summary>
    ///"Bangladesh" 
    /// </summary>
    [pbr::OriginalName("B_D")] BD = 19,
    /// <summary>
    ///"Barbados" 
    /// </summary>
    [pbr::OriginalName("B_B")] BB = 20,
    /// <summary>
    ///"Belarus" 
    /// </summary>
    [pbr::OriginalName("B_Y")] BY = 21,
    /// <summary>
    ///"Belgium" 
    /// </summary>
    [pbr::OriginalName("B_E")] BE = 22,
    /// <summary>
    ///"Belize" 
    /// </summary>
    [pbr::OriginalName("B_Z")] BZ = 23,
    /// <summary>
    ///"Benin" 
    /// </summary>
    [pbr::OriginalName("B_J")] BJ = 24,
    /// <summary>
    ///"Bermuda" 
    /// </summary>
    [pbr::OriginalName("B_M")] BM = 25,
    /// <summary>
    ///"Bhutan" 
    /// </summary>
    [pbr::OriginalName("B_T")] BT = 26,
    /// <summary>
    ///"Bolivia (Plurinational State of)" 
    /// </summary>
    [pbr::OriginalName("B_O")] BO = 27,
    /// <summary>
    ///"Bonaire; Sint Eustatius and Saba" 
    /// </summary>
    [pbr::OriginalName("B_Q")] BQ = 28,
    /// <summary>
    ///"Bosnia and Herzegovina" 
    /// </summary>
    [pbr::OriginalName("B_A")] BA = 29,
    /// <summary>
    ///"Botswana" 
    /// </summary>
    [pbr::OriginalName("B_W")] BW = 30,
    /// <summary>
    ///"Bouvet Island" 
    /// </summary>
    [pbr::OriginalName("B_V")] BV = 31,
    /// <summary>
    ///"Brazil" 
    /// </summary>
    [pbr::OriginalName("B_R")] BR = 32,
    /// <summary>
    ///"British Indian Ocean Territory" 
    /// </summary>
    [pbr::OriginalName("I_O")] IO = 33,
    /// <summary>
    ///"Brunei Darussalam" 
    /// </summary>
    [pbr::OriginalName("B_N")] BN = 34,
    /// <summary>
    ///"Bulgaria" 
    /// </summary>
    [pbr::OriginalName("B_G")] BG = 35,
    /// <summary>
    ///"Burkina Faso" 
    /// </summary>
    [pbr::OriginalName("B_F")] BF = 36,
    /// <summary>
    ///"Burundi" 
    /// </summary>
    [pbr::OriginalName("B_I")] BI = 37,
    /// <summary>
    ///"Cabo Verde" 
    /// </summary>
    [pbr::OriginalName("C_V")] CV = 38,
    /// <summary>
    ///"Cambodia" 
    /// </summary>
    [pbr::OriginalName("K_H")] KH = 39,
    /// <summary>
    ///"Cameroon" 
    /// </summary>
    [pbr::OriginalName("C_M")] CM = 40,
    /// <summary>
    ///"Canada" 
    /// </summary>
    [pbr::OriginalName("C_A")] CA = 41,
    /// <summary>
    ///"Cayman Islands" 
    /// </summary>
    [pbr::OriginalName("K_Y")] KY = 42,
    /// <summary>
    ///"Central African Republic" 
    /// </summary>
    [pbr::OriginalName("C_F")] CF = 43,
    /// <summary>
    ///"Chad" 
    /// </summary>
    [pbr::OriginalName("T_D")] TD = 44,
    /// <summary>
    ///"Chile" 
    /// </summary>
    [pbr::OriginalName("C_L")] CL = 45,
    /// <summary>
    ///"China" 
    /// </summary>
    [pbr::OriginalName("C_N")] CN = 46,
    /// <summary>
    ///"Christmas Island" 
    /// </summary>
    [pbr::OriginalName("C_X")] CX = 47,
    /// <summary>
    ///"Cocos (Keeling) Islands" 
    /// </summary>
    [pbr::OriginalName("C_C")] CC = 48,
    /// <summary>
    ///"Colombia" 
    /// </summary>
    [pbr::OriginalName("C_O")] CO = 49,
    /// <summary>
    ///"Comoros" 
    /// </summary>
    [pbr::OriginalName("K_M")] KM = 50,
    /// <summary>
    ///"Congo" 
    /// </summary>
    [pbr::OriginalName("C_G")] CG = 51,
    /// <summary>
    ///"Congo (Democratic Republic of the)" 
    /// </summary>
    [pbr::OriginalName("C_D")] CD = 52,
    /// <summary>
    ///"Cook Islands" 
    /// </summary>
    [pbr::OriginalName("C_K")] CK = 53,
    /// <summary>
    ///"Costa Rica" 
    /// </summary>
    [pbr::OriginalName("C_R")] CR = 54,
    /// <summary>
    ///"Côte d'Ivoire" 
    /// </summary>
    [pbr::OriginalName("C_I")] CI = 55,
    /// <summary>
    ///"Croatia" 
    /// </summary>
    [pbr::OriginalName("H_R")] HR = 56,
    /// <summary>
    ///"Cuba" 
    /// </summary>
    [pbr::OriginalName("C_U")] CU = 57,
    /// <summary>
    ///"Curaçao" 
    /// </summary>
    [pbr::OriginalName("C_W")] CW = 58,
    /// <summary>
    ///"Cyprus" 
    /// </summary>
    [pbr::OriginalName("C_Y")] CY = 59,
    /// <summary>
    ///"Czechia" 
    /// </summary>
    [pbr::OriginalName("C_Z")] CZ = 60,
    /// <summary>
    ///"Denmark" 
    /// </summary>
    [pbr::OriginalName("D_K")] DK = 61,
    /// <summary>
    ///"Djibouti" 
    /// </summary>
    [pbr::OriginalName("D_J")] DJ = 62,
    /// <summary>
    ///"Dominica" 
    /// </summary>
    [pbr::OriginalName("D_M")] DM = 63,
    /// <summary>
    ///"Dominican Republic" 
    /// </summary>
    [pbr::OriginalName("D_O")] DO = 64,
    /// <summary>
    ///"Ecuador" 
    /// </summary>
    [pbr::OriginalName("E_C")] EC = 65,
    /// <summary>
    ///"Egypt" 
    /// </summary>
    [pbr::OriginalName("E_G")] EG = 66,
    /// <summary>
    ///"El Salvador" 
    /// </summary>
    [pbr::OriginalName("S_V")] SV = 67,
    /// <summary>
    ///"Equatorial Guinea" 
    /// </summary>
    [pbr::OriginalName("G_Q")] GQ = 68,
    /// <summary>
    ///"Eritrea" 
    /// </summary>
    [pbr::OriginalName("E_R")] ER = 69,
    /// <summary>
    ///"Estonia" 
    /// </summary>
    [pbr::OriginalName("E_E")] EE = 70,
    /// <summary>
    ///"Ethiopia" 
    /// </summary>
    [pbr::OriginalName("E_T")] ET = 71,
    /// <summary>
    ///"Falkland Islands (Malvinas)" 
    /// </summary>
    [pbr::OriginalName("F_K")] FK = 72,
    /// <summary>
    ///"Faroe Islands" 
    /// </summary>
    [pbr::OriginalName("F_O")] FO = 73,
    /// <summary>
    ///"Fiji" 
    /// </summary>
    [pbr::OriginalName("F_J")] FJ = 74,
    /// <summary>
    ///"Finland" 
    /// </summary>
    [pbr::OriginalName("F_I")] FI = 75,
    /// <summary>
    ///"France" 
    /// </summary>
    [pbr::OriginalName("F_R")] FR = 76,
    /// <summary>
    ///"French Guiana" 
    /// </summary>
    [pbr::OriginalName("G_F")] GF = 77,
    /// <summary>
    ///"French Polynesia" 
    /// </summary>
    [pbr::OriginalName("P_F")] PF = 78,
    /// <summary>
    ///"French Southern Territories" 
    /// </summary>
    [pbr::OriginalName("T_F")] TF = 79,
    /// <summary>
    ///"Gabon" 
    /// </summary>
    [pbr::OriginalName("G_A")] GA = 80,
    /// <summary>
    ///"Gambia" 
    /// </summary>
    [pbr::OriginalName("G_M")] GM = 81,
    /// <summary>
    ///"Georgia" 
    /// </summary>
    [pbr::OriginalName("G_E")] GE = 82,
    /// <summary>
    ///"Germany" 
    /// </summary>
    [pbr::OriginalName("D_E")] DE = 83,
    /// <summary>
    ///"Ghana" 
    /// </summary>
    [pbr::OriginalName("G_H")] GH = 84,
    /// <summary>
    ///"Gibraltar" 
    /// </summary>
    [pbr::OriginalName("G_I")] GI = 85,
    /// <summary>
    ///"Greece" 
    /// </summary>
    [pbr::OriginalName("G_R")] GR = 86,
    /// <summary>
    ///"Greenland" 
    /// </summary>
    [pbr::OriginalName("G_L")] GL = 87,
    /// <summary>
    ///"Grenada" 
    /// </summary>
    [pbr::OriginalName("G_D")] GD = 88,
    /// <summary>
    ///"Guadeloupe" 
    /// </summary>
    [pbr::OriginalName("G_P")] GP = 89,
    /// <summary>
    ///"Guam" 
    /// </summary>
    [pbr::OriginalName("G_U")] GU = 90,
    /// <summary>
    ///"Guatemala" 
    /// </summary>
    [pbr::OriginalName("G_T")] GT = 91,
    /// <summary>
    ///"Guernsey" 
    /// </summary>
    [pbr::OriginalName("G_G")] GG = 92,
    /// <summary>
    ///"Guinea" 
    /// </summary>
    [pbr::OriginalName("G_N")] GN = 93,
    /// <summary>
    ///"Guinea-Bissau" 
    /// </summary>
    [pbr::OriginalName("G_W")] GW = 94,
    /// <summary>
    ///"Guyana" 
    /// </summary>
    [pbr::OriginalName("G_Y")] GY = 95,
    /// <summary>
    ///"Haiti" 
    /// </summary>
    [pbr::OriginalName("H_T")] HT = 96,
    /// <summary>
    ///"Heard Island and McDonald Islands" 
    /// </summary>
    [pbr::OriginalName("H_M")] HM = 97,
    /// <summary>
    ///"Holy See" 
    /// </summary>
    [pbr::OriginalName("V_A")] VA = 98,
    /// <summary>
    ///"Honduras" 
    /// </summary>
    [pbr::OriginalName("H_N")] HN = 99,
    /// <summary>
    ///"Hong Kong" 
    /// </summary>
    [pbr::OriginalName("H_K")] HK = 100,
    /// <summary>
    ///"Hungary" 
    /// </summary>
    [pbr::OriginalName("H_U")] HU = 101,
    /// <summary>
    ///"Iceland" 
    /// </summary>
    [pbr::OriginalName("I_S")] IS = 102,
    /// <summary>
    ///"India" 
    /// </summary>
    [pbr::OriginalName("I_N")] IN = 103,
    /// <summary>
    ///"Indonesia" 
    /// </summary>
    [pbr::OriginalName("I_D")] ID = 104,
    /// <summary>
    ///"Iran (Islamic Republic of)" 
    /// </summary>
    [pbr::OriginalName("I_R")] IR = 105,
    /// <summary>
    ///"Iraq" 
    /// </summary>
    [pbr::OriginalName("I_Q")] IQ = 106,
    /// <summary>
    ///"Ireland" 
    /// </summary>
    [pbr::OriginalName("I_E")] IE = 107,
    /// <summary>
    ///"Isle of Man" 
    /// </summary>
    [pbr::OriginalName("I_M")] IM = 108,
    /// <summary>
    ///"Israel" 
    /// </summary>
    [pbr::OriginalName("I_L")] IL = 109,
    /// <summary>
    ///"Italy" 
    /// </summary>
    [pbr::OriginalName("I_T")] IT = 110,
    /// <summary>
    ///"Jamaica" 
    /// </summary>
    [pbr::OriginalName("J_M")] JM = 111,
    /// <summary>
    ///"Japan" 
    /// </summary>
    [pbr::OriginalName("J_P")] JP = 112,
    /// <summary>
    ///"Jersey" 
    /// </summary>
    [pbr::OriginalName("J_E")] JE = 113,
    /// <summary>
    ///"Jordan" 
    /// </summary>
    [pbr::OriginalName("J_O")] JO = 114,
    /// <summary>
    ///"Kazakhstan" 
    /// </summary>
    [pbr::OriginalName("K_Z")] KZ = 115,
    /// <summary>
    ///"Kenya" 
    /// </summary>
    [pbr::OriginalName("K_E")] KE = 116,
    /// <summary>
    ///"Kiribati" 
    /// </summary>
    [pbr::OriginalName("K_I")] KI = 117,
    /// <summary>
    ///"Korea (Democratic People's Republic of)" 
    /// </summary>
    [pbr::OriginalName("K_P")] KP = 118,
    /// <summary>
    ///"Korea (Republic of)" 
    /// </summary>
    [pbr::OriginalName("K_R")] KR = 119,
    /// <summary>
    ///"Kuwait" 
    /// </summary>
    [pbr::OriginalName("K_W")] KW = 120,
    /// <summary>
    ///"Kyrgyzstan" 
    /// </summary>
    [pbr::OriginalName("K_G")] KG = 121,
    /// <summary>
    ///"Lao People's Democratic Republic" 
    /// </summary>
    [pbr::OriginalName("L_A")] LA = 122,
    /// <summary>
    ///"Latvia" 
    /// </summary>
    [pbr::OriginalName("L_V")] LV = 123,
    /// <summary>
    ///"Lebanon" 
    /// </summary>
    [pbr::OriginalName("L_B")] LB = 124,
    /// <summary>
    ///"Lesotho" 
    /// </summary>
    [pbr::OriginalName("L_S")] LS = 125,
    /// <summary>
    ///"Liberia" 
    /// </summary>
    [pbr::OriginalName("L_R")] LR = 126,
    /// <summary>
    ///"Libya" 
    /// </summary>
    [pbr::OriginalName("L_Y")] LY = 127,
    /// <summary>
    ///"Liechtenstein" 
    /// </summary>
    [pbr::OriginalName("L_I")] LI = 128,
    /// <summary>
    ///"Lithuania" 
    /// </summary>
    [pbr::OriginalName("L_T")] LT = 129,
    /// <summary>
    ///"Luxembourg" 
    /// </summary>
    [pbr::OriginalName("L_U")] LU = 130,
    /// <summary>
    ///"Macao" 
    /// </summary>
    [pbr::OriginalName("M_O")] MO = 131,
    /// <summary>
    ///"Macedonia (the former Yugoslav Republic of)" 
    /// </summary>
    [pbr::OriginalName("M_K")] MK = 132,
    /// <summary>
    ///"Madagascar" 
    /// </summary>
    [pbr::OriginalName("M_G")] MG = 133,
    /// <summary>
    ///"Malawi" 
    /// </summary>
    [pbr::OriginalName("M_W")] MW = 134,
    /// <summary>
    ///"Malaysia" 
    /// </summary>
    [pbr::OriginalName("M_Y")] MY = 135,
    /// <summary>
    ///"Maldives" 
    /// </summary>
    [pbr::OriginalName("M_V")] MV = 136,
    /// <summary>
    ///"Mali" 
    /// </summary>
    [pbr::OriginalName("M_L")] ML = 137,
    /// <summary>
    ///"Malta" 
    /// </summary>
    [pbr::OriginalName("M_T")] MT = 138,
    /// <summary>
    ///"Marshall Islands" 
    /// </summary>
    [pbr::OriginalName("M_H")] MH = 139,
    /// <summary>
    ///"Martinique" 
    /// </summary>
    [pbr::OriginalName("M_Q")] MQ = 140,
    /// <summary>
    ///"Mauritania" 
    /// </summary>
    [pbr::OriginalName("M_R")] MR = 141,
    /// <summary>
    ///"Mauritius" 
    /// </summary>
    [pbr::OriginalName("M_U")] MU = 142,
    /// <summary>
    ///"Mayotte" 
    /// </summary>
    [pbr::OriginalName("Y_T")] YT = 143,
    /// <summary>
    ///"Mexico" 
    /// </summary>
    [pbr::OriginalName("M_X")] MX = 144,
    /// <summary>
    ///"Micronesia (Federated States of)" 
    /// </summary>
    [pbr::OriginalName("F_M")] FM = 145,
    /// <summary>
    ///"Moldova (Republic of)" 
    /// </summary>
    [pbr::OriginalName("M_D")] MD = 146,
    /// <summary>
    ///"Monaco" 
    /// </summary>
    [pbr::OriginalName("M_C")] MC = 147,
    /// <summary>
    ///"Mongolia" 
    /// </summary>
    [pbr::OriginalName("M_N")] MN = 148,
    /// <summary>
    ///"Montenegro" 
    /// </summary>
    [pbr::OriginalName("M_E")] ME = 149,
    /// <summary>
    ///"Montserrat" 
    /// </summary>
    [pbr::OriginalName("M_S")] MS = 150,
    /// <summary>
    ///"Morocco" 
    /// </summary>
    [pbr::OriginalName("M_A")] MA = 151,
    /// <summary>
    ///"Mozambique" 
    /// </summary>
    [pbr::OriginalName("M_Z")] MZ = 152,
    /// <summary>
    ///"Myanmar" 
    /// </summary>
    [pbr::OriginalName("M_M")] MM = 153,
    /// <summary>
    ///"Namibia" 
    /// </summary>
    [pbr::OriginalName("N_A")] NA = 154,
    /// <summary>
    ///"Nauru" 
    /// </summary>
    [pbr::OriginalName("N_R")] NR = 155,
    /// <summary>
    ///"Nepal" 
    /// </summary>
    [pbr::OriginalName("N_P")] NP = 156,
    /// <summary>
    ///"Netherlands" 
    /// </summary>
    [pbr::OriginalName("N_L")] NL = 157,
    /// <summary>
    ///"New Caledonia" 
    /// </summary>
    [pbr::OriginalName("N_C")] NC = 158,
    /// <summary>
    ///"New Zealand" 
    /// </summary>
    [pbr::OriginalName("N_Z")] NZ = 159,
    /// <summary>
    ///"Nicaragua" 
    /// </summary>
    [pbr::OriginalName("N_I")] NI = 160,
    /// <summary>
    ///"Niger" 
    /// </summary>
    [pbr::OriginalName("N_E")] NE = 161,
    /// <summary>
    ///"Nigeria" 
    /// </summary>
    [pbr::OriginalName("N_G")] NG = 162,
    /// <summary>
    ///"Niue" 
    /// </summary>
    [pbr::OriginalName("N_U")] NU = 163,
    /// <summary>
    ///"Norfolk Island" 
    /// </summary>
    [pbr::OriginalName("N_F")] NF = 164,
    /// <summary>
    ///"Northern Mariana Islands" 
    /// </summary>
    [pbr::OriginalName("M_P")] MP = 165,
    /// <summary>
    ///"Norway" 
    /// </summary>
    [pbr::OriginalName("N_O")] NO = 166,
    /// <summary>
    ///"Oman" 
    /// </summary>
    [pbr::OriginalName("O_M")] OM = 167,
    /// <summary>
    ///"Pakistan" 
    /// </summary>
    [pbr::OriginalName("P_K")] PK = 168,
    /// <summary>
    ///"Palau" 
    /// </summary>
    [pbr::OriginalName("P_W")] PW = 169,
    /// <summary>
    ///"Palestine; State of" 
    /// </summary>
    [pbr::OriginalName("P_S")] PS = 170,
    /// <summary>
    ///"Panama" 
    /// </summary>
    [pbr::OriginalName("P_A")] PA = 171,
    /// <summary>
    ///"Papua New Guinea" 
    /// </summary>
    [pbr::OriginalName("P_G")] PG = 172,
    /// <summary>
    ///"Paraguay" 
    /// </summary>
    [pbr::OriginalName("P_Y")] PY = 173,
    /// <summary>
    ///"Peru" 
    /// </summary>
    [pbr::OriginalName("P_E")] PE = 174,
    /// <summary>
    ///"Philippines" 
    /// </summary>
    [pbr::OriginalName("P_H")] PH = 175,
    /// <summary>
    ///"Pitcairn" 
    /// </summary>
    [pbr::OriginalName("P_N")] PN = 176,
    /// <summary>
    ///"Poland" 
    /// </summary>
    [pbr::OriginalName("P_L")] PL = 177,
    /// <summary>
    ///"Portugal" 
    /// </summary>
    [pbr::OriginalName("P_T")] PT = 178,
    /// <summary>
    ///"Puerto Rico" 
    /// </summary>
    [pbr::OriginalName("P_R")] PR = 179,
    /// <summary>
    ///"Qatar" 
    /// </summary>
    [pbr::OriginalName("Q_A")] QA = 180,
    /// <summary>
    ///"Réunion" 
    /// </summary>
    [pbr::OriginalName("R_E")] RE = 181,
    /// <summary>
    ///"Romania" 
    /// </summary>
    [pbr::OriginalName("R_O")] RO = 182,
    /// <summary>
    ///"Russian Federation" 
    /// </summary>
    [pbr::OriginalName("R_U")] RU = 183,
    /// <summary>
    ///"Rwanda" 
    /// </summary>
    [pbr::OriginalName("R_W")] RW = 184,
    /// <summary>
    ///"Saint Barthélemy" 
    /// </summary>
    [pbr::OriginalName("B_L")] BL = 185,
    /// <summary>
    ///"Saint Helena; Ascension and Tristan da Cunha" 
    /// </summary>
    [pbr::OriginalName("S_H")] SH = 186,
    /// <summary>
    ///"Saint Kitts and Nevis" 
    /// </summary>
    [pbr::OriginalName("K_N")] KN = 187,
    /// <summary>
    ///"Saint Lucia" 
    /// </summary>
    [pbr::OriginalName("L_C")] LC = 188,
    /// <summary>
    ///"Saint Martin (French part)" 
    /// </summary>
    [pbr::OriginalName("M_F")] MF = 189,
    /// <summary>
    ///"Saint Pierre and Miquelon" 
    /// </summary>
    [pbr::OriginalName("P_M")] PM = 190,
    /// <summary>
    ///"Saint Vincent and the Grenadines" 
    /// </summary>
    [pbr::OriginalName("V_C")] VC = 191,
    /// <summary>
    ///"Samoa" 
    /// </summary>
    [pbr::OriginalName("W_S")] WS = 192,
    /// <summary>
    ///"San Marino" 
    /// </summary>
    [pbr::OriginalName("S_M")] SM = 193,
    /// <summary>
    ///"Sao Tome and Principe" 
    /// </summary>
    [pbr::OriginalName("S_T")] ST = 194,
    /// <summary>
    ///"Saudi Arabia" 
    /// </summary>
    [pbr::OriginalName("S_A")] SA = 195,
    /// <summary>
    ///"Senegal" 
    /// </summary>
    [pbr::OriginalName("S_N")] SN = 196,
    /// <summary>
    ///"Serbia" 
    /// </summary>
    [pbr::OriginalName("R_S")] RS = 197,
    /// <summary>
    ///"Seychelles" 
    /// </summary>
    [pbr::OriginalName("S_C")] SC = 198,
    /// <summary>
    ///"Sierra Leone" 
    /// </summary>
    [pbr::OriginalName("S_L")] SL = 199,
    /// <summary>
    ///"Singapore"
    /// </summary>
    [pbr::OriginalName("S_G")] SG = 200,
    /// <summary>
    ///"Sint Maarten (Dutch part)" 
    /// </summary>
    [pbr::OriginalName("S_X")] SX = 201,
    /// <summary>
    ///"Slovakia" 
    /// </summary>
    [pbr::OriginalName("S_K")] SK = 202,
    /// <summary>
    ///"Slovenia" 
    /// </summary>
    [pbr::OriginalName("S_I")] SI = 203,
    /// <summary>
    ///"Solomon Islands" 
    /// </summary>
    [pbr::OriginalName("S_B")] SB = 204,
    /// <summary>
    ///"Somalia" 
    /// </summary>
    [pbr::OriginalName("S_O")] SO = 205,
    /// <summary>
    ///"South Africa" 
    /// </summary>
    [pbr::OriginalName("Z_A")] ZA = 206,
    /// <summary>
    ///"South Georgia and the South Sandwich Islands" 
    /// </summary>
    [pbr::OriginalName("G_S")] GS = 207,
    /// <summary>
    ///"South Sudan" 
    /// </summary>
    [pbr::OriginalName("S_S")] SS = 208,
    /// <summary>
    ///"Spain" 
    /// </summary>
    [pbr::OriginalName("E_S")] ES = 209,
    /// <summary>
    ///"Sri Lanka" 
    /// </summary>
    [pbr::OriginalName("L_K")] LK = 210,
    /// <summary>
    ///"Sudan" 
    /// </summary>
    [pbr::OriginalName("S_D")] SD = 211,
    /// <summary>
    ///"Suriname" 
    /// </summary>
    [pbr::OriginalName("S_R")] SR = 212,
    /// <summary>
    ///"Svalbard and Jan Mayen" 
    /// </summary>
    [pbr::OriginalName("S_J")] SJ = 213,
    /// <summary>
    ///"Swaziland" 
    /// </summary>
    [pbr::OriginalName("S_Z")] SZ = 214,
    /// <summary>
    ///"Sweden" 
    /// </summary>
    [pbr::OriginalName("S_E")] SE = 215,
    /// <summary>
    ///"Switzerland" 
    /// </summary>
    [pbr::OriginalName("C_H")] CH = 216,
    /// <summary>
    ///"Syrian Arab Republic" 
    /// </summary>
    [pbr::OriginalName("S_Y")] SY = 217,
    /// <summary>
    ///"Taiwan; Province of China[a]" 
    /// </summary>
    [pbr::OriginalName("T_W")] TW = 218,
    /// <summary>
    ///"Tajikistan" 
    /// </summary>
    [pbr::OriginalName("T_J")] TJ = 219,
    /// <summary>
    ///"Tanzania; United Republic of" 
    /// </summary>
    [pbr::OriginalName("T_Z")] TZ = 220,
    /// <summary>
    ///"Thailand" 
    /// </summary>
    [pbr::OriginalName("T_H")] TH = 221,
    /// <summary>
    ///"Timor-Leste" 
    /// </summary>
    [pbr::OriginalName("T_L")] TL = 222,
    /// <summary>
    ///"Togo" 
    /// </summary>
    [pbr::OriginalName("T_G")] TG = 223,
    /// <summary>
    ///"Tokelau" 
    /// </summary>
    [pbr::OriginalName("T_K")] TK = 224,
    /// <summary>
    ///"Tonga" 
    /// </summary>
    [pbr::OriginalName("T_O")] TO = 225,
    /// <summary>
    ///"Trinidad and Tobago" 
    /// </summary>
    [pbr::OriginalName("T_T")] TT = 226,
    /// <summary>
    ///"Tunisia" 
    /// </summary>
    [pbr::OriginalName("T_N")] TN = 227,
    /// <summary>
    ///"Turkey" 
    /// </summary>
    [pbr::OriginalName("T_R")] TR = 228,
    /// <summary>
    ///"Turkmenistan" 
    /// </summary>
    [pbr::OriginalName("T_M")] TM = 229,
    /// <summary>
    ///"Turks and Caicos Islands" 
    /// </summary>
    [pbr::OriginalName("T_C")] TC = 230,
    /// <summary>
    ///"Tuvalu" 
    /// </summary>
    [pbr::OriginalName("T_V")] TV = 231,
    /// <summary>
    ///"Uganda" 
    /// </summary>
    [pbr::OriginalName("U_G")] UG = 232,
    /// <summary>
    ///"Ukraine" 
    /// </summary>
    [pbr::OriginalName("U_A")] UA = 233,
    /// <summary>
    ///"United Arab Emirates" 
    /// </summary>
    [pbr::OriginalName("A_E")] AE = 234,
    /// <summary>
    ///"United Kingdom of Great Britain and Northern Ireland" 
    /// </summary>
    [pbr::OriginalName("G_B")] GB = 235,
    /// <summary>
    ///"United States of America" 
    /// </summary>
    [pbr::OriginalName("U_S")] US = 236,
    /// <summary>
    ///"United States Minor Outlying Islands" 
    /// </summary>
    [pbr::OriginalName("U_M")] UM = 237,
    /// <summary>
    ///"Uruguay" 
    /// </summary>
    [pbr::OriginalName("U_Y")] UY = 238,
    /// <summary>
    ///"Uzbekistan" 
    /// </summary>
    [pbr::OriginalName("U_Z")] UZ = 239,
    /// <summary>
    ///"Vanuatu" 
    /// </summary>
    [pbr::OriginalName("V_U")] VU = 240,
    /// <summary>
    ///"Venezuela (Bolivarian Republic of)" 
    /// </summary>
    [pbr::OriginalName("V_E")] VE = 241,
    /// <summary>
    ///"Viet Nam" 
    /// </summary>
    [pbr::OriginalName("V_N")] VN = 242,
    /// <summary>
    ///"Virgin Islands (British)" 
    /// </summary>
    [pbr::OriginalName("V_G")] VG = 243,
    /// <summary>
    ///"Virgin Islands (U.S.)" 
    /// </summary>
    [pbr::OriginalName("V_I")] VI = 244,
    /// <summary>
    ///"Wallis and Futuna" 
    /// </summary>
    [pbr::OriginalName("W_F")] WF = 245,
    /// <summary>
    ///"Western Sahara" 
    /// </summary>
    [pbr::OriginalName("E_H")] EH = 246,
    /// <summary>
    ///"Yemen" 
    /// </summary>
    [pbr::OriginalName("Y_E")] YE = 247,
    /// <summary>
    ///"Zambia" 
    /// </summary>
    [pbr::OriginalName("Z_M")] ZM = 248,
    /// <summary>
    ///"Zimbabwe" 
    /// </summary>
    [pbr::OriginalName("Z_W")] ZW = 249,
  }

  public enum Language {
    /// <summary>
    ///"English"
    /// </summary>
    [pbr::OriginalName("en")] En = 0,
    /// <summary>
    ///"Spanish"
    /// </summary>
    [pbr::OriginalName("es")] Es = 1,
    /// <summary>
    ///"Chinese"
    /// </summary>
    [pbr::OriginalName("zh")] Zh = 2,
    /// <summary>
    ///"French"
    /// </summary>
    [pbr::OriginalName("fr")] Fr = 3,
  }

  public enum ReportType {
    [pbr::OriginalName("INTEGRATED_REPORT")] IntegratedReport = 0,
    [pbr::OriginalName("FINANCIAL_REPORT")] FinancialReport = 1,
    [pbr::OriginalName("SUSTAINABILITY_REPORT")] SustainabilityReport = 2,
    [pbr::OriginalName("ANNUAL_REPORT")] AnnualReport = 3,
    [pbr::OriginalName("PROXY_STATEMENT")] ProxyStatement = 4,
    [pbr::OriginalName("REGISTRATION_STATEMENT")] RegistrationStatement = 5,
    [pbr::OriginalName("QUARTERLY_REPORT")] QuarterlyReport = 6,
    [pbr::OriginalName("HALF_YEARLY_REPORT")] HalfYearlyReport = 7,
    [pbr::OriginalName("OTHER")] Other = 8,
  }

  /// <summary>
  ///Industry code prefix, i.e. ISIC
  /// </summary>
  public enum IndustryCodePrefix {
    [pbr::OriginalName("I_S_I_C")] ISIC = 0,
    [pbr::OriginalName("N_A_I_C_S")] NAICS = 1,
    [pbr::OriginalName("G_I_C_S")] GICS = 2,
    /// <summary>
    ///TODO: add more
    /// </summary>
    [pbr::OriginalName("S_I_C")] SIC = 3,
  }

  public enum ReportFormat {
    [pbr::OriginalName("P_D_F")] PDF = 0,
    [pbr::OriginalName("i_X_B_R_L")] IXBRL = 1,
    /// <summary>
    ///TODO: add more
    /// </summary>
    [pbr::OriginalName("OPEN_XML")] OpenXml = 2,
  }

  public enum ReportingStandard {
    [pbr::OriginalName("G_A_A_P")] GAAP = 0,
    [pbr::OriginalName("I_F_R_S")] IFRS = 1,
    [pbr::OriginalName("I_S_S_B")] ISSB = 2,
    [pbr::OriginalName("E_F_R_A_G")] EFRAG = 3,
    /// <summary>
    ///TODO: add more
    /// </summary>
    [pbr::OriginalName("G_R_I")] GRI = 4,
  }

  public enum Unit {
    [pbr::OriginalName("TONNE_CO2E")] TonneCo2E = 0,
    [pbr::OriginalName("TONNE_CO2")] TonneCo2 = 1,
    [pbr::OriginalName("TONNE_CH4")] TonneCh4 = 2,
    [pbr::OriginalName("TONNE_N2O")] TonneN2O = 3,
    [pbr::OriginalName("TONNE_S")] TonneS = 4,
    [pbr::OriginalName("TONNE_NOX")] TonneNox = 5,
    [pbr::OriginalName("TONNE_SOX")] TonneSox = 6,
    [pbr::OriginalName("TONNE_PM10")] TonnePm10 = 7,
    [pbr::OriginalName("TONNE_PM2_5")] TonnePm25 = 8,
    [pbr::OriginalName("TONNE_VOC")] TonneVoc = 9,
    [pbr::OriginalName("TONNE_NH3")] TonneNh3 = 10,
    [pbr::OriginalName("TONNE_PFC")] TonnePfc = 11,
    [pbr::OriginalName("TONNE_SF6")] TonneSf6 = 12,
    [pbr::OriginalName("TONNE_HFC")] TonneHfc = 13,
    [pbr::OriginalName("TONNE_CFC")] TonneCfc = 14,
    [pbr::OriginalName("TONNE_HFC23")] TonneHfc23 = 15,
    [pbr::OriginalName("TONNE_HFC32")] TonneHfc32 = 16,
    [pbr::OriginalName("TONNE_HFC125")] TonneHfc125 = 17,
    [pbr::OriginalName("TONNE_HFC134a")] TonneHfc134A = 18,
    [pbr::OriginalName("TONNE_HFC143a")] TonneHfc143A = 19,
    [pbr::OriginalName("TONNE_HFC227ea")] TonneHfc227Ea = 20,
    [pbr::OriginalName("TONNE_HFC245fa")] TonneHfc245Fa = 21,
    [pbr::OriginalName("TONNE_HFC365mfc")] TonneHfc365Mfc = 22,
    [pbr::OriginalName("TONNE_HFC4310mee")] TonneHfc4310Mee = 23,
    [pbr::OriginalName("TONNE_C2F6")] TonneC2F6 = 24,
    [pbr::OriginalName("TONNE_C3F8")] TonneC3F8 = 25,
    [pbr::OriginalName("TONNE_C4F10")] TonneC4F10 = 26,
    [pbr::OriginalName("TONNE_C5F12")] TonneC5F12 = 27,
    [pbr::OriginalName("TONNE_C6F14")] TonneC6F14 = 28,
    [pbr::OriginalName("TONNE_C7F16")] TonneC7F16 = 29,
    [pbr::OriginalName("TONNE_C8F18")] TonneC8F18 = 30,
    [pbr::OriginalName("TONNE_C10F18")] TonneC10F18 = 31,
    [pbr::OriginalName("TONNE_C12F18")] TonneC12F18 = 32,
    [pbr::OriginalName("TONNE_C14F18")] TonneC14F18 = 33,
    [pbr::OriginalName("TONNE_C16F18")] TonneC16F18 = 34,
    [pbr::OriginalName("TONNE_C18F18")] TonneC18F18 = 35,
    [pbr::OriginalName("TONNE_C20F18")] TonneC20F18 = 36,
    [pbr::OriginalName("TONNE_C22F18")] TonneC22F18 = 37,
    [pbr::OriginalName("TONNE_C24F18")] TonneC24F18 = 38,
    [pbr::OriginalName("TONNE_C26F18")] TonneC26F18 = 39,
    [pbr::OriginalName("TONNE_C28F18")] TonneC28F18 = 40,
    [pbr::OriginalName("TONNE_C30F18")] TonneC30F18 = 41,
    [pbr::OriginalName("TONNE_C32F18")] TonneC32F18 = 42,
    [pbr::OriginalName("TONNE_C34F18")] TonneC34F18 = 43,
    [pbr::OriginalName("LITER")] Liter = 100,
    [pbr::OriginalName("KILOGRAM")] Kilogram = 101,
    [pbr::OriginalName("CUBIC_METER")] CubicMeter = 102,
    [pbr::OriginalName("KILOWATT")] Kilowatt = 103,
    [pbr::OriginalName("MEGAWATT")] Megawatt = 104,
    [pbr::OriginalName("MEGAJUOLE")] Megajuole = 105,
    [pbr::OriginalName("KILOMETER")] Kilometer = 106,
    [pbr::OriginalName("SQUARE_METER")] SquareMeter = 107,
    [pbr::OriginalName("TONNE")] Tonne = 108,
    [pbr::OriginalName("MW_H")] MwH = 109,
    [pbr::OriginalName("KW_H")] KwH = 110,
  }

  #endregion

  #region Messages
  public sealed partial class SustainabilityReport : pb::IMessage<SustainabilityReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SustainabilityReport> _parser = new pb::MessageParser<SustainabilityReport>(() => new SustainabilityReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SustainabilityReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SustainabilityReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SustainabilityReport(SustainabilityReport other) : this() {
      gRID_ = other.gRID_;
      metadata_ = other.metadata_ != null ? other.metadata_.Clone() : null;
      report_ = other.report_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SustainabilityReport Clone() {
      return new SustainabilityReport(this);
    }

    /// <summary>Field number for the "g_r_i_d" field.</summary>
    public const int GRIDFieldNumber = 1;
    private string gRID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GRID {
      get { return gRID_; }
      set {
        gRID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private global::CarbonCall.Metadata.Metadata metadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Metadata Metadata {
      get { return metadata_; }
      set {
        metadata_ = value;
      }
    }

    /// <summary>Field number for the "report" field.</summary>
    public const int ReportFieldNumber = 3;
    private string report_ = "";
    /// <summary>
    ///could be google.protobuf.Any or bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Report {
      get { return report_; }
      set {
        report_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SustainabilityReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SustainabilityReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GRID != other.GRID) return false;
      if (!object.Equals(Metadata, other.Metadata)) return false;
      if (Report != other.Report) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GRID.Length != 0) hash ^= GRID.GetHashCode();
      if (metadata_ != null) hash ^= Metadata.GetHashCode();
      if (Report.Length != 0) hash ^= Report.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GRID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GRID);
      }
      if (metadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Metadata);
      }
      if (Report.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GRID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GRID);
      }
      if (metadata_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Metadata);
      }
      if (Report.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Report);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GRID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GRID);
      }
      if (metadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Metadata);
      }
      if (Report.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Report);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SustainabilityReport other) {
      if (other == null) {
        return;
      }
      if (other.GRID.Length != 0) {
        GRID = other.GRID;
      }
      if (other.metadata_ != null) {
        if (metadata_ == null) {
          Metadata = new global::CarbonCall.Metadata.Metadata();
        }
        Metadata.MergeFrom(other.Metadata);
      }
      if (other.Report.Length != 0) {
        Report = other.Report;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GRID = input.ReadString();
            break;
          }
          case 18: {
            if (metadata_ == null) {
              Metadata = new global::CarbonCall.Metadata.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 26: {
            Report = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GRID = input.ReadString();
            break;
          }
          case 18: {
            if (metadata_ == null) {
              Metadata = new global::CarbonCall.Metadata.Metadata();
            }
            input.ReadMessage(Metadata);
            break;
          }
          case 26: {
            Report = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Metadata : pb::IMessage<Metadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metadata> _parser = new pb::MessageParser<Metadata>(() => new Metadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Metadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata(Metadata other) : this() {
      gRID_ = other.gRID_;
      organizationIdentifier_ = other.organizationIdentifier_;
      organizationName_ = other.organizationName_;
      domicile_ = other.domicile_;
      operatingCountries_ = other.operatingCountries_.Clone();
      languages_ = other.languages_.Clone();
      reportType_ = other.reportType_;
      reportIssueDate_ = other.reportIssueDate_;
      reportingPeriod_ = other.reportingPeriod_ != null ? other.reportingPeriod_.Clone() : null;
      reportReplaces_ = other.reportReplaces_;
      location_ = other.location_;
      industry_ = other.industry_ != null ? other.industry_.Clone() : null;
      performance_ = other.performance_;
      goverance_ = other.goverance_ != null ? other.goverance_.Clone() : null;
      methodology_ = other.methodology_ != null ? other.methodology_.Clone() : null;
      reportFormat_ = other.reportFormat_;
      reportingStandard_ = other.reportingStandard_;
      assurance_ = other.assurance_;
      priorReport_ = other.priorReport_;
      reportHash_ = other.reportHash_;
      activities_ = other.activities_.Clone();
      reportContext_ = other.reportContext_.Clone();
      propertyContexts_ = other.propertyContexts_.Clone();
      metatdataExtensions_ = other.metatdataExtensions_.Clone();
      pFExtensions_ = other.pFExtensions_.Clone();
      relatedReports_ = other.relatedReports_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metadata Clone() {
      return new Metadata(this);
    }

    /// <summary>Field number for the "g_r_i_d" field.</summary>
    public const int GRIDFieldNumber = 1;
    private string gRID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GRID {
      get { return gRID_; }
      set {
        gRID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organization_identifier" field.</summary>
    public const int OrganizationIdentifierFieldNumber = 2;
    private string organizationIdentifier_ = "";
    /// <summary>
    ///Includes a scheme prefix and the identity code used for the scheme.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrganizationIdentifier {
      get { return organizationIdentifier_; }
      set {
        organizationIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "organization_name" field.</summary>
    public const int OrganizationNameFieldNumber = 3;
    private string organizationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string OrganizationName {
      get { return organizationName_; }
      set {
        organizationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "domicile" field.</summary>
    public const int DomicileFieldNumber = 4;
    private global::CarbonCall.Metadata.ISO3166_CountryCode domicile_ = global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.ISO3166_CountryCode Domicile {
      get { return domicile_; }
      set {
        domicile_ = value;
      }
    }

    /// <summary>Field number for the "operating_countries" field.</summary>
    public const int OperatingCountriesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.ISO3166_CountryCode> _repeated_operatingCountries_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::CarbonCall.Metadata.ISO3166_CountryCode) x);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.ISO3166_CountryCode> operatingCountries_ = new pbc::RepeatedField<global::CarbonCall.Metadata.ISO3166_CountryCode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.ISO3166_CountryCode> OperatingCountries {
      get { return operatingCountries_; }
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Language> _repeated_languages_codec
        = pb::FieldCodec.ForEnum(50, x => (int) x, x => (global::CarbonCall.Metadata.Language) x);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Language> languages_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Language>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Language> Languages {
      get { return languages_; }
    }

    /// <summary>Field number for the "report_type" field.</summary>
    public const int ReportTypeFieldNumber = 7;
    private global::CarbonCall.Metadata.ReportType reportType_ = global::CarbonCall.Metadata.ReportType.IntegratedReport;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.ReportType ReportType {
      get { return reportType_; }
      set {
        reportType_ = value;
      }
    }

    /// <summary>Field number for the "report_issue_date" field.</summary>
    public const int ReportIssueDateFieldNumber = 8;
    private string reportIssueDate_ = "";
    /// <summary>
    ///ISO 8601 date format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportIssueDate {
      get { return reportIssueDate_; }
      set {
        reportIssueDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reporting_period" field.</summary>
    public const int ReportingPeriodFieldNumber = 9;
    private global::CarbonCall.Metadata.TimePeriod reportingPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.TimePeriod ReportingPeriod {
      get { return reportingPeriod_; }
      set {
        reportingPeriod_ = value;
      }
    }

    /// <summary>Field number for the "report_replaces" field.</summary>
    public const int ReportReplacesFieldNumber = 10;
    private string reportReplaces_ = "";
    /// <summary>
    ///GR.ID of the report this report replaces
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportReplaces {
      get { return reportReplaces_; }
      set {
        reportReplaces_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 11;
    private string location_ = "";
    /// <summary>
    ///URL or URI of the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "industry" field.</summary>
    public const int IndustryFieldNumber = 12;
    private global::CarbonCall.Metadata.Industry industry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Industry Industry {
      get { return industry_; }
      set {
        industry_ = value;
      }
    }

    /// <summary>Field number for the "performance" field.</summary>
    public const int PerformanceFieldNumber = 13;
    private string performance_ = "";
    /// <summary>
    ///xBRL-JSON snippet that provides certain performance information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Performance {
      get { return performance_; }
      set {
        performance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "goverance" field.</summary>
    public const int GoveranceFieldNumber = 14;
    private global::CarbonCall.Metadata.Goverance goverance_;
    /// <summary>
    ///goverance properties of the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Goverance Goverance {
      get { return goverance_; }
      set {
        goverance_ = value;
      }
    }

    /// <summary>Field number for the "methodology" field.</summary>
    public const int MethodologyFieldNumber = 15;
    private global::CarbonCall.Metadata.Methodology methodology_;
    /// <summary>
    ///methodology used for the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Methodology Methodology {
      get { return methodology_; }
      set {
        methodology_ = value;
      }
    }

    /// <summary>Field number for the "report_format" field.</summary>
    public const int ReportFormatFieldNumber = 16;
    private global::CarbonCall.Metadata.ReportFormat reportFormat_ = global::CarbonCall.Metadata.ReportFormat.PDF;
    /// <summary>
    ///Format of the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.ReportFormat ReportFormat {
      get { return reportFormat_; }
      set {
        reportFormat_ = value;
      }
    }

    /// <summary>Field number for the "reporting_standard" field.</summary>
    public const int ReportingStandardFieldNumber = 17;
    private global::CarbonCall.Metadata.ReportingStandard reportingStandard_ = global::CarbonCall.Metadata.ReportingStandard.GAAP;
    /// <summary>
    ///Reporting standard used for the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.ReportingStandard ReportingStandard {
      get { return reportingStandard_; }
      set {
        reportingStandard_ = value;
      }
    }

    /// <summary>Field number for the "assurance" field.</summary>
    public const int AssuranceFieldNumber = 18;
    private string assurance_ = "";
    /// <summary>
    ///Scheme prefix and identifier for the provider that conducted the assurance or audit.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Assurance {
      get { return assurance_; }
      set {
        assurance_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prior_report" field.</summary>
    public const int PriorReportFieldNumber = 19;
    private string priorReport_ = "";
    /// <summary>
    ///GR.ID of the report this report is based on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PriorReport {
      get { return priorReport_; }
      set {
        priorReport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "report_hash" field.</summary>
    public const int ReportHashFieldNumber = 20;
    private string reportHash_ = "";
    /// <summary>
    ///SHA-256 hash of the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportHash {
      get { return reportHash_; }
      set {
        reportHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activities" field.</summary>
    public const int ActivitiesFieldNumber = 21;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Activity> _repeated_activities_codec
        = pb::FieldCodec.ForMessage(170, global::CarbonCall.Metadata.Activity.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Activity> activities_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Activity>();
    /// <summary>
    ///Activities that are reported on
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Activity> Activities {
      get { return activities_; }
    }

    /// <summary>Field number for the "report_context" field.</summary>
    public const int ReportContextFieldNumber = 22;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Metatag> _repeated_reportContext_codec
        = pb::FieldCodec.ForMessage(178, global::CarbonCall.Metadata.Metatag.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Metatag> reportContext_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Metatag>();
    /// <summary>
    ///Metatags that provide additional context for the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Metatag> ReportContext {
      get { return reportContext_; }
    }

    /// <summary>Field number for the "property_contexts" field.</summary>
    public const int PropertyContextsFieldNumber = 23;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.PropertyContext> _repeated_propertyContexts_codec
        = pb::FieldCodec.ForMessage(186, global::CarbonCall.Metadata.PropertyContext.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext> propertyContexts_ = new pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext>();
    /// <summary>
    ///Property contexts that provide additional context for the report, i.e., section metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext> PropertyContexts {
      get { return propertyContexts_; }
    }

    /// <summary>Field number for the "metatdata_extensions" field.</summary>
    public const int MetatdataExtensionsFieldNumber = 24;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.MetadataExtension> _repeated_metatdataExtensions_codec
        = pb::FieldCodec.ForMessage(194, global::CarbonCall.Metadata.MetadataExtension.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.MetadataExtension> metatdataExtensions_ = new pbc::RepeatedField<global::CarbonCall.Metadata.MetadataExtension>();
    /// <summary>
    ///Extensions to the metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.MetadataExtension> MetatdataExtensions {
      get { return metatdataExtensions_; }
    }

    /// <summary>Field number for the "p_f_extensions" field.</summary>
    public const int PFExtensionsFieldNumber = 25;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.ProductFootprintExtension> _repeated_pFExtensions_codec
        = pb::FieldCodec.ForMessage(202, global::CarbonCall.Metadata.ProductFootprintExtension.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.ProductFootprintExtension> pFExtensions_ = new pbc::RepeatedField<global::CarbonCall.Metadata.ProductFootprintExtension>();
    /// <summary>
    ///Extensions to any related product footprints in the report
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.ProductFootprintExtension> PFExtensions {
      get { return pFExtensions_; }
    }

    /// <summary>Field number for the "related_reports" field.</summary>
    public const int RelatedReportsFieldNumber = 26;
    private static readonly pb::FieldCodec<string> _repeated_relatedReports_codec
        = pb::FieldCodec.ForString(210);
    private readonly pbc::RepeatedField<string> relatedReports_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///GR.IDs of related reports
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> RelatedReports {
      get { return relatedReports_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Metadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Metadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GRID != other.GRID) return false;
      if (OrganizationIdentifier != other.OrganizationIdentifier) return false;
      if (OrganizationName != other.OrganizationName) return false;
      if (Domicile != other.Domicile) return false;
      if(!operatingCountries_.Equals(other.operatingCountries_)) return false;
      if(!languages_.Equals(other.languages_)) return false;
      if (ReportType != other.ReportType) return false;
      if (ReportIssueDate != other.ReportIssueDate) return false;
      if (!object.Equals(ReportingPeriod, other.ReportingPeriod)) return false;
      if (ReportReplaces != other.ReportReplaces) return false;
      if (Location != other.Location) return false;
      if (!object.Equals(Industry, other.Industry)) return false;
      if (Performance != other.Performance) return false;
      if (!object.Equals(Goverance, other.Goverance)) return false;
      if (!object.Equals(Methodology, other.Methodology)) return false;
      if (ReportFormat != other.ReportFormat) return false;
      if (ReportingStandard != other.ReportingStandard) return false;
      if (Assurance != other.Assurance) return false;
      if (PriorReport != other.PriorReport) return false;
      if (ReportHash != other.ReportHash) return false;
      if(!activities_.Equals(other.activities_)) return false;
      if(!reportContext_.Equals(other.reportContext_)) return false;
      if(!propertyContexts_.Equals(other.propertyContexts_)) return false;
      if(!metatdataExtensions_.Equals(other.metatdataExtensions_)) return false;
      if(!pFExtensions_.Equals(other.pFExtensions_)) return false;
      if(!relatedReports_.Equals(other.relatedReports_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GRID.Length != 0) hash ^= GRID.GetHashCode();
      if (OrganizationIdentifier.Length != 0) hash ^= OrganizationIdentifier.GetHashCode();
      if (OrganizationName.Length != 0) hash ^= OrganizationName.GetHashCode();
      if (Domicile != global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown) hash ^= Domicile.GetHashCode();
      hash ^= operatingCountries_.GetHashCode();
      hash ^= languages_.GetHashCode();
      if (ReportType != global::CarbonCall.Metadata.ReportType.IntegratedReport) hash ^= ReportType.GetHashCode();
      if (ReportIssueDate.Length != 0) hash ^= ReportIssueDate.GetHashCode();
      if (reportingPeriod_ != null) hash ^= ReportingPeriod.GetHashCode();
      if (ReportReplaces.Length != 0) hash ^= ReportReplaces.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (industry_ != null) hash ^= Industry.GetHashCode();
      if (Performance.Length != 0) hash ^= Performance.GetHashCode();
      if (goverance_ != null) hash ^= Goverance.GetHashCode();
      if (methodology_ != null) hash ^= Methodology.GetHashCode();
      if (ReportFormat != global::CarbonCall.Metadata.ReportFormat.PDF) hash ^= ReportFormat.GetHashCode();
      if (ReportingStandard != global::CarbonCall.Metadata.ReportingStandard.GAAP) hash ^= ReportingStandard.GetHashCode();
      if (Assurance.Length != 0) hash ^= Assurance.GetHashCode();
      if (PriorReport.Length != 0) hash ^= PriorReport.GetHashCode();
      if (ReportHash.Length != 0) hash ^= ReportHash.GetHashCode();
      hash ^= activities_.GetHashCode();
      hash ^= reportContext_.GetHashCode();
      hash ^= propertyContexts_.GetHashCode();
      hash ^= metatdataExtensions_.GetHashCode();
      hash ^= pFExtensions_.GetHashCode();
      hash ^= relatedReports_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GRID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GRID);
      }
      if (OrganizationIdentifier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrganizationIdentifier);
      }
      if (OrganizationName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrganizationName);
      }
      if (Domicile != global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Domicile);
      }
      operatingCountries_.WriteTo(output, _repeated_operatingCountries_codec);
      languages_.WriteTo(output, _repeated_languages_codec);
      if (ReportType != global::CarbonCall.Metadata.ReportType.IntegratedReport) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ReportType);
      }
      if (ReportIssueDate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ReportIssueDate);
      }
      if (reportingPeriod_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReportingPeriod);
      }
      if (ReportReplaces.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ReportReplaces);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Location);
      }
      if (industry_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Industry);
      }
      if (Performance.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Performance);
      }
      if (goverance_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Goverance);
      }
      if (methodology_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Methodology);
      }
      if (ReportFormat != global::CarbonCall.Metadata.ReportFormat.PDF) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) ReportFormat);
      }
      if (ReportingStandard != global::CarbonCall.Metadata.ReportingStandard.GAAP) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) ReportingStandard);
      }
      if (Assurance.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Assurance);
      }
      if (PriorReport.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(PriorReport);
      }
      if (ReportHash.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ReportHash);
      }
      activities_.WriteTo(output, _repeated_activities_codec);
      reportContext_.WriteTo(output, _repeated_reportContext_codec);
      propertyContexts_.WriteTo(output, _repeated_propertyContexts_codec);
      metatdataExtensions_.WriteTo(output, _repeated_metatdataExtensions_codec);
      pFExtensions_.WriteTo(output, _repeated_pFExtensions_codec);
      relatedReports_.WriteTo(output, _repeated_relatedReports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GRID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GRID);
      }
      if (OrganizationIdentifier.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(OrganizationIdentifier);
      }
      if (OrganizationName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrganizationName);
      }
      if (Domicile != global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Domicile);
      }
      operatingCountries_.WriteTo(ref output, _repeated_operatingCountries_codec);
      languages_.WriteTo(ref output, _repeated_languages_codec);
      if (ReportType != global::CarbonCall.Metadata.ReportType.IntegratedReport) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ReportType);
      }
      if (ReportIssueDate.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ReportIssueDate);
      }
      if (reportingPeriod_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReportingPeriod);
      }
      if (ReportReplaces.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ReportReplaces);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Location);
      }
      if (industry_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Industry);
      }
      if (Performance.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Performance);
      }
      if (goverance_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Goverance);
      }
      if (methodology_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Methodology);
      }
      if (ReportFormat != global::CarbonCall.Metadata.ReportFormat.PDF) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) ReportFormat);
      }
      if (ReportingStandard != global::CarbonCall.Metadata.ReportingStandard.GAAP) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) ReportingStandard);
      }
      if (Assurance.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Assurance);
      }
      if (PriorReport.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(PriorReport);
      }
      if (ReportHash.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(ReportHash);
      }
      activities_.WriteTo(ref output, _repeated_activities_codec);
      reportContext_.WriteTo(ref output, _repeated_reportContext_codec);
      propertyContexts_.WriteTo(ref output, _repeated_propertyContexts_codec);
      metatdataExtensions_.WriteTo(ref output, _repeated_metatdataExtensions_codec);
      pFExtensions_.WriteTo(ref output, _repeated_pFExtensions_codec);
      relatedReports_.WriteTo(ref output, _repeated_relatedReports_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GRID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GRID);
      }
      if (OrganizationIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizationIdentifier);
      }
      if (OrganizationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrganizationName);
      }
      if (Domicile != global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Domicile);
      }
      size += operatingCountries_.CalculateSize(_repeated_operatingCountries_codec);
      size += languages_.CalculateSize(_repeated_languages_codec);
      if (ReportType != global::CarbonCall.Metadata.ReportType.IntegratedReport) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReportType);
      }
      if (ReportIssueDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportIssueDate);
      }
      if (reportingPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReportingPeriod);
      }
      if (ReportReplaces.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportReplaces);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (industry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Industry);
      }
      if (Performance.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Performance);
      }
      if (goverance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Goverance);
      }
      if (methodology_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Methodology);
      }
      if (ReportFormat != global::CarbonCall.Metadata.ReportFormat.PDF) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ReportFormat);
      }
      if (ReportingStandard != global::CarbonCall.Metadata.ReportingStandard.GAAP) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ReportingStandard);
      }
      if (Assurance.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Assurance);
      }
      if (PriorReport.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PriorReport);
      }
      if (ReportHash.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ReportHash);
      }
      size += activities_.CalculateSize(_repeated_activities_codec);
      size += reportContext_.CalculateSize(_repeated_reportContext_codec);
      size += propertyContexts_.CalculateSize(_repeated_propertyContexts_codec);
      size += metatdataExtensions_.CalculateSize(_repeated_metatdataExtensions_codec);
      size += pFExtensions_.CalculateSize(_repeated_pFExtensions_codec);
      size += relatedReports_.CalculateSize(_repeated_relatedReports_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Metadata other) {
      if (other == null) {
        return;
      }
      if (other.GRID.Length != 0) {
        GRID = other.GRID;
      }
      if (other.OrganizationIdentifier.Length != 0) {
        OrganizationIdentifier = other.OrganizationIdentifier;
      }
      if (other.OrganizationName.Length != 0) {
        OrganizationName = other.OrganizationName;
      }
      if (other.Domicile != global::CarbonCall.Metadata.ISO3166_CountryCode.Unknown) {
        Domicile = other.Domicile;
      }
      operatingCountries_.Add(other.operatingCountries_);
      languages_.Add(other.languages_);
      if (other.ReportType != global::CarbonCall.Metadata.ReportType.IntegratedReport) {
        ReportType = other.ReportType;
      }
      if (other.ReportIssueDate.Length != 0) {
        ReportIssueDate = other.ReportIssueDate;
      }
      if (other.reportingPeriod_ != null) {
        if (reportingPeriod_ == null) {
          ReportingPeriod = new global::CarbonCall.Metadata.TimePeriod();
        }
        ReportingPeriod.MergeFrom(other.ReportingPeriod);
      }
      if (other.ReportReplaces.Length != 0) {
        ReportReplaces = other.ReportReplaces;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.industry_ != null) {
        if (industry_ == null) {
          Industry = new global::CarbonCall.Metadata.Industry();
        }
        Industry.MergeFrom(other.Industry);
      }
      if (other.Performance.Length != 0) {
        Performance = other.Performance;
      }
      if (other.goverance_ != null) {
        if (goverance_ == null) {
          Goverance = new global::CarbonCall.Metadata.Goverance();
        }
        Goverance.MergeFrom(other.Goverance);
      }
      if (other.methodology_ != null) {
        if (methodology_ == null) {
          Methodology = new global::CarbonCall.Metadata.Methodology();
        }
        Methodology.MergeFrom(other.Methodology);
      }
      if (other.ReportFormat != global::CarbonCall.Metadata.ReportFormat.PDF) {
        ReportFormat = other.ReportFormat;
      }
      if (other.ReportingStandard != global::CarbonCall.Metadata.ReportingStandard.GAAP) {
        ReportingStandard = other.ReportingStandard;
      }
      if (other.Assurance.Length != 0) {
        Assurance = other.Assurance;
      }
      if (other.PriorReport.Length != 0) {
        PriorReport = other.PriorReport;
      }
      if (other.ReportHash.Length != 0) {
        ReportHash = other.ReportHash;
      }
      activities_.Add(other.activities_);
      reportContext_.Add(other.reportContext_);
      propertyContexts_.Add(other.propertyContexts_);
      metatdataExtensions_.Add(other.metatdataExtensions_);
      pFExtensions_.Add(other.pFExtensions_);
      relatedReports_.Add(other.relatedReports_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GRID = input.ReadString();
            break;
          }
          case 18: {
            OrganizationIdentifier = input.ReadString();
            break;
          }
          case 26: {
            OrganizationName = input.ReadString();
            break;
          }
          case 32: {
            Domicile = (global::CarbonCall.Metadata.ISO3166_CountryCode) input.ReadEnum();
            break;
          }
          case 42:
          case 40: {
            operatingCountries_.AddEntriesFrom(input, _repeated_operatingCountries_codec);
            break;
          }
          case 50:
          case 48: {
            languages_.AddEntriesFrom(input, _repeated_languages_codec);
            break;
          }
          case 56: {
            ReportType = (global::CarbonCall.Metadata.ReportType) input.ReadEnum();
            break;
          }
          case 66: {
            ReportIssueDate = input.ReadString();
            break;
          }
          case 74: {
            if (reportingPeriod_ == null) {
              ReportingPeriod = new global::CarbonCall.Metadata.TimePeriod();
            }
            input.ReadMessage(ReportingPeriod);
            break;
          }
          case 82: {
            ReportReplaces = input.ReadString();
            break;
          }
          case 90: {
            Location = input.ReadString();
            break;
          }
          case 98: {
            if (industry_ == null) {
              Industry = new global::CarbonCall.Metadata.Industry();
            }
            input.ReadMessage(Industry);
            break;
          }
          case 106: {
            Performance = input.ReadString();
            break;
          }
          case 114: {
            if (goverance_ == null) {
              Goverance = new global::CarbonCall.Metadata.Goverance();
            }
            input.ReadMessage(Goverance);
            break;
          }
          case 122: {
            if (methodology_ == null) {
              Methodology = new global::CarbonCall.Metadata.Methodology();
            }
            input.ReadMessage(Methodology);
            break;
          }
          case 128: {
            ReportFormat = (global::CarbonCall.Metadata.ReportFormat) input.ReadEnum();
            break;
          }
          case 136: {
            ReportingStandard = (global::CarbonCall.Metadata.ReportingStandard) input.ReadEnum();
            break;
          }
          case 146: {
            Assurance = input.ReadString();
            break;
          }
          case 154: {
            PriorReport = input.ReadString();
            break;
          }
          case 162: {
            ReportHash = input.ReadString();
            break;
          }
          case 170: {
            activities_.AddEntriesFrom(input, _repeated_activities_codec);
            break;
          }
          case 178: {
            reportContext_.AddEntriesFrom(input, _repeated_reportContext_codec);
            break;
          }
          case 186: {
            propertyContexts_.AddEntriesFrom(input, _repeated_propertyContexts_codec);
            break;
          }
          case 194: {
            metatdataExtensions_.AddEntriesFrom(input, _repeated_metatdataExtensions_codec);
            break;
          }
          case 202: {
            pFExtensions_.AddEntriesFrom(input, _repeated_pFExtensions_codec);
            break;
          }
          case 210: {
            relatedReports_.AddEntriesFrom(input, _repeated_relatedReports_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GRID = input.ReadString();
            break;
          }
          case 18: {
            OrganizationIdentifier = input.ReadString();
            break;
          }
          case 26: {
            OrganizationName = input.ReadString();
            break;
          }
          case 32: {
            Domicile = (global::CarbonCall.Metadata.ISO3166_CountryCode) input.ReadEnum();
            break;
          }
          case 42:
          case 40: {
            operatingCountries_.AddEntriesFrom(ref input, _repeated_operatingCountries_codec);
            break;
          }
          case 50:
          case 48: {
            languages_.AddEntriesFrom(ref input, _repeated_languages_codec);
            break;
          }
          case 56: {
            ReportType = (global::CarbonCall.Metadata.ReportType) input.ReadEnum();
            break;
          }
          case 66: {
            ReportIssueDate = input.ReadString();
            break;
          }
          case 74: {
            if (reportingPeriod_ == null) {
              ReportingPeriod = new global::CarbonCall.Metadata.TimePeriod();
            }
            input.ReadMessage(ReportingPeriod);
            break;
          }
          case 82: {
            ReportReplaces = input.ReadString();
            break;
          }
          case 90: {
            Location = input.ReadString();
            break;
          }
          case 98: {
            if (industry_ == null) {
              Industry = new global::CarbonCall.Metadata.Industry();
            }
            input.ReadMessage(Industry);
            break;
          }
          case 106: {
            Performance = input.ReadString();
            break;
          }
          case 114: {
            if (goverance_ == null) {
              Goverance = new global::CarbonCall.Metadata.Goverance();
            }
            input.ReadMessage(Goverance);
            break;
          }
          case 122: {
            if (methodology_ == null) {
              Methodology = new global::CarbonCall.Metadata.Methodology();
            }
            input.ReadMessage(Methodology);
            break;
          }
          case 128: {
            ReportFormat = (global::CarbonCall.Metadata.ReportFormat) input.ReadEnum();
            break;
          }
          case 136: {
            ReportingStandard = (global::CarbonCall.Metadata.ReportingStandard) input.ReadEnum();
            break;
          }
          case 146: {
            Assurance = input.ReadString();
            break;
          }
          case 154: {
            PriorReport = input.ReadString();
            break;
          }
          case 162: {
            ReportHash = input.ReadString();
            break;
          }
          case 170: {
            activities_.AddEntriesFrom(ref input, _repeated_activities_codec);
            break;
          }
          case 178: {
            reportContext_.AddEntriesFrom(ref input, _repeated_reportContext_codec);
            break;
          }
          case 186: {
            propertyContexts_.AddEntriesFrom(ref input, _repeated_propertyContexts_codec);
            break;
          }
          case 194: {
            metatdataExtensions_.AddEntriesFrom(ref input, _repeated_metatdataExtensions_codec);
            break;
          }
          case 202: {
            pFExtensions_.AddEntriesFrom(ref input, _repeated_pFExtensions_codec);
            break;
          }
          case 210: {
            relatedReports_.AddEntriesFrom(ref input, _repeated_relatedReports_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProductFootprintExtension : pb::IMessage<ProductFootprintExtension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProductFootprintExtension> _parser = new pb::MessageParser<ProductFootprintExtension>(() => new ProductFootprintExtension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProductFootprintExtension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProductFootprintExtension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProductFootprintExtension(ProductFootprintExtension other) : this() {
      pfId_ = other.pfId_;
      pCFPropertyData_ = other.pCFPropertyData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProductFootprintExtension Clone() {
      return new ProductFootprintExtension(this);
    }

    /// <summary>Field number for the "pfId" field.</summary>
    public const int PfIdFieldNumber = 1;
    private string pfId_ = "";
    /// <summary>
    ///Id of the product footprint
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PfId {
      get { return pfId_; }
      set {
        pfId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "p_c_f_property_data" field.</summary>
    public const int PCFPropertyDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.PropertyContext> _repeated_pCFPropertyData_codec
        = pb::FieldCodec.ForMessage(18, global::CarbonCall.Metadata.PropertyContext.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext> pCFPropertyData_ = new pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext>();
    /// <summary>
    ///Property contexts that provide additional context for the product footprint, i.e., section metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.PropertyContext> PCFPropertyData {
      get { return pCFPropertyData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProductFootprintExtension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProductFootprintExtension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PfId != other.PfId) return false;
      if(!pCFPropertyData_.Equals(other.pCFPropertyData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PfId.Length != 0) hash ^= PfId.GetHashCode();
      hash ^= pCFPropertyData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PfId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PfId);
      }
      pCFPropertyData_.WriteTo(output, _repeated_pCFPropertyData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PfId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PfId);
      }
      pCFPropertyData_.WriteTo(ref output, _repeated_pCFPropertyData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PfId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PfId);
      }
      size += pCFPropertyData_.CalculateSize(_repeated_pCFPropertyData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProductFootprintExtension other) {
      if (other == null) {
        return;
      }
      if (other.PfId.Length != 0) {
        PfId = other.PfId;
      }
      pCFPropertyData_.Add(other.pCFPropertyData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PfId = input.ReadString();
            break;
          }
          case 18: {
            pCFPropertyData_.AddEntriesFrom(input, _repeated_pCFPropertyData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PfId = input.ReadString();
            break;
          }
          case 18: {
            pCFPropertyData_.AddEntriesFrom(ref input, _repeated_pCFPropertyData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Activity : pb::IMessage<Activity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Activity> _parser = new pb::MessageParser<Activity>(() => new Activity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Activity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Activity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Activity(Activity other) : this() {
      activityType_ = other.activityType_;
      unitOfMeasure_ = other.unitOfMeasure_;
      activityAmount_ = other.activityAmount_;
      activityPeriod_ = other.activityPeriod_ != null ? other.activityPeriod_.Clone() : null;
      activityDescription_ = other.activityDescription_;
      activityLocation_ = other.activityLocation_ != null ? other.activityLocation_.Clone() : null;
      activityFactorAndSource_ = other.activityFactorAndSource_ != null ? other.activityFactorAndSource_.Clone() : null;
      relatedMetadata_ = other.relatedMetadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Activity Clone() {
      return new Activity(this);
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 1;
    private string activityType_ = "";
    /// <summary>
    ///an activity (heating, cooling, &amp; lighting a facility, travel, transportation, purchase)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityType {
      get { return activityType_; }
      set {
        activityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unit_of_measure" field.</summary>
    public const int UnitOfMeasureFieldNumber = 2;
    private global::CarbonCall.Metadata.Unit unitOfMeasure_ = global::CarbonCall.Metadata.Unit.TonneCo2E;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Unit UnitOfMeasure {
      get { return unitOfMeasure_; }
      set {
        unitOfMeasure_ = value;
      }
    }

    /// <summary>Field number for the "activity_amount" field.</summary>
    public const int ActivityAmountFieldNumber = 3;
    private string activityAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityAmount {
      get { return activityAmount_; }
      set {
        activityAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity_period" field.</summary>
    public const int ActivityPeriodFieldNumber = 4;
    private global::CarbonCall.Metadata.TimePeriod activityPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.TimePeriod ActivityPeriod {
      get { return activityPeriod_; }
      set {
        activityPeriod_ = value;
      }
    }

    /// <summary>Field number for the "activity_description" field.</summary>
    public const int ActivityDescriptionFieldNumber = 5;
    private string activityDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActivityDescription {
      get { return activityDescription_; }
      set {
        activityDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity_location" field.</summary>
    public const int ActivityLocationFieldNumber = 6;
    private global::CarbonCall.Metadata.GeographicLocation activityLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.GeographicLocation ActivityLocation {
      get { return activityLocation_; }
      set {
        activityLocation_ = value;
      }
    }

    /// <summary>Field number for the "activity_factor_and_source" field.</summary>
    public const int ActivityFactorAndSourceFieldNumber = 7;
    private global::CarbonCall.Metadata.FactorAndSource activityFactorAndSource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.FactorAndSource ActivityFactorAndSource {
      get { return activityFactorAndSource_; }
      set {
        activityFactorAndSource_ = value;
      }
    }

    /// <summary>Field number for the "related_metadata" field.</summary>
    public const int RelatedMetadataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Metalink> _repeated_relatedMetadata_codec
        = pb::FieldCodec.ForMessage(66, global::CarbonCall.Metadata.Metalink.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> relatedMetadata_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Metalink>();
    /// <summary>
    ///links to related metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> RelatedMetadata {
      get { return relatedMetadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Activity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Activity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActivityType != other.ActivityType) return false;
      if (UnitOfMeasure != other.UnitOfMeasure) return false;
      if (ActivityAmount != other.ActivityAmount) return false;
      if (!object.Equals(ActivityPeriod, other.ActivityPeriod)) return false;
      if (ActivityDescription != other.ActivityDescription) return false;
      if (!object.Equals(ActivityLocation, other.ActivityLocation)) return false;
      if (!object.Equals(ActivityFactorAndSource, other.ActivityFactorAndSource)) return false;
      if(!relatedMetadata_.Equals(other.relatedMetadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActivityType.Length != 0) hash ^= ActivityType.GetHashCode();
      if (UnitOfMeasure != global::CarbonCall.Metadata.Unit.TonneCo2E) hash ^= UnitOfMeasure.GetHashCode();
      if (ActivityAmount.Length != 0) hash ^= ActivityAmount.GetHashCode();
      if (activityPeriod_ != null) hash ^= ActivityPeriod.GetHashCode();
      if (ActivityDescription.Length != 0) hash ^= ActivityDescription.GetHashCode();
      if (activityLocation_ != null) hash ^= ActivityLocation.GetHashCode();
      if (activityFactorAndSource_ != null) hash ^= ActivityFactorAndSource.GetHashCode();
      hash ^= relatedMetadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActivityType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityType);
      }
      if (UnitOfMeasure != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        output.WriteRawTag(16);
        output.WriteEnum((int) UnitOfMeasure);
      }
      if (ActivityAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityAmount);
      }
      if (activityPeriod_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ActivityPeriod);
      }
      if (ActivityDescription.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ActivityDescription);
      }
      if (activityLocation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActivityLocation);
      }
      if (activityFactorAndSource_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ActivityFactorAndSource);
      }
      relatedMetadata_.WriteTo(output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActivityType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActivityType);
      }
      if (UnitOfMeasure != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        output.WriteRawTag(16);
        output.WriteEnum((int) UnitOfMeasure);
      }
      if (ActivityAmount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ActivityAmount);
      }
      if (activityPeriod_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ActivityPeriod);
      }
      if (ActivityDescription.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ActivityDescription);
      }
      if (activityLocation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActivityLocation);
      }
      if (activityFactorAndSource_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ActivityFactorAndSource);
      }
      relatedMetadata_.WriteTo(ref output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActivityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityType);
      }
      if (UnitOfMeasure != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UnitOfMeasure);
      }
      if (ActivityAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityAmount);
      }
      if (activityPeriod_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityPeriod);
      }
      if (ActivityDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActivityDescription);
      }
      if (activityLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityLocation);
      }
      if (activityFactorAndSource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActivityFactorAndSource);
      }
      size += relatedMetadata_.CalculateSize(_repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Activity other) {
      if (other == null) {
        return;
      }
      if (other.ActivityType.Length != 0) {
        ActivityType = other.ActivityType;
      }
      if (other.UnitOfMeasure != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        UnitOfMeasure = other.UnitOfMeasure;
      }
      if (other.ActivityAmount.Length != 0) {
        ActivityAmount = other.ActivityAmount;
      }
      if (other.activityPeriod_ != null) {
        if (activityPeriod_ == null) {
          ActivityPeriod = new global::CarbonCall.Metadata.TimePeriod();
        }
        ActivityPeriod.MergeFrom(other.ActivityPeriod);
      }
      if (other.ActivityDescription.Length != 0) {
        ActivityDescription = other.ActivityDescription;
      }
      if (other.activityLocation_ != null) {
        if (activityLocation_ == null) {
          ActivityLocation = new global::CarbonCall.Metadata.GeographicLocation();
        }
        ActivityLocation.MergeFrom(other.ActivityLocation);
      }
      if (other.activityFactorAndSource_ != null) {
        if (activityFactorAndSource_ == null) {
          ActivityFactorAndSource = new global::CarbonCall.Metadata.FactorAndSource();
        }
        ActivityFactorAndSource.MergeFrom(other.ActivityFactorAndSource);
      }
      relatedMetadata_.Add(other.relatedMetadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActivityType = input.ReadString();
            break;
          }
          case 16: {
            UnitOfMeasure = (global::CarbonCall.Metadata.Unit) input.ReadEnum();
            break;
          }
          case 26: {
            ActivityAmount = input.ReadString();
            break;
          }
          case 34: {
            if (activityPeriod_ == null) {
              ActivityPeriod = new global::CarbonCall.Metadata.TimePeriod();
            }
            input.ReadMessage(ActivityPeriod);
            break;
          }
          case 42: {
            ActivityDescription = input.ReadString();
            break;
          }
          case 50: {
            if (activityLocation_ == null) {
              ActivityLocation = new global::CarbonCall.Metadata.GeographicLocation();
            }
            input.ReadMessage(ActivityLocation);
            break;
          }
          case 58: {
            if (activityFactorAndSource_ == null) {
              ActivityFactorAndSource = new global::CarbonCall.Metadata.FactorAndSource();
            }
            input.ReadMessage(ActivityFactorAndSource);
            break;
          }
          case 66: {
            relatedMetadata_.AddEntriesFrom(input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ActivityType = input.ReadString();
            break;
          }
          case 16: {
            UnitOfMeasure = (global::CarbonCall.Metadata.Unit) input.ReadEnum();
            break;
          }
          case 26: {
            ActivityAmount = input.ReadString();
            break;
          }
          case 34: {
            if (activityPeriod_ == null) {
              ActivityPeriod = new global::CarbonCall.Metadata.TimePeriod();
            }
            input.ReadMessage(ActivityPeriod);
            break;
          }
          case 42: {
            ActivityDescription = input.ReadString();
            break;
          }
          case 50: {
            if (activityLocation_ == null) {
              ActivityLocation = new global::CarbonCall.Metadata.GeographicLocation();
            }
            input.ReadMessage(ActivityLocation);
            break;
          }
          case 58: {
            if (activityFactorAndSource_ == null) {
              ActivityFactorAndSource = new global::CarbonCall.Metadata.FactorAndSource();
            }
            input.ReadMessage(ActivityFactorAndSource);
            break;
          }
          case 66: {
            relatedMetadata_.AddEntriesFrom(ref input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FactorAndSource : pb::IMessage<FactorAndSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FactorAndSource> _parser = new pb::MessageParser<FactorAndSource>(() => new FactorAndSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FactorAndSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactorAndSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactorAndSource(FactorAndSource other) : this() {
      factorType_ = other.factorType_;
      factorUnit_ = other.factorUnit_;
      factorSource_ = other.factorSource_;
      factorPrecision_ = other.factorPrecision_ != null ? other.factorPrecision_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactorAndSource Clone() {
      return new FactorAndSource(this);
    }

    /// <summary>Field number for the "factor_type" field.</summary>
    public const int FactorTypeFieldNumber = 1;
    private global::CarbonCall.Metadata.FactorAndSource.Types.FactorType factorType_ = global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.FactorAndSource.Types.FactorType FactorType {
      get { return factorType_; }
      set {
        factorType_ = value;
      }
    }

    /// <summary>Field number for the "factor_unit" field.</summary>
    public const int FactorUnitFieldNumber = 2;
    private global::CarbonCall.Metadata.Unit factorUnit_ = global::CarbonCall.Metadata.Unit.TonneCo2E;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Unit FactorUnit {
      get { return factorUnit_; }
      set {
        factorUnit_ = value;
      }
    }

    /// <summary>Field number for the "factor_source" field.</summary>
    public const int FactorSourceFieldNumber = 3;
    private string factorSource_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FactorSource {
      get { return factorSource_; }
      set {
        factorSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "factor_precision" field.</summary>
    public const int FactorPrecisionFieldNumber = 4;
    private global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix factorPrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix FactorPrecision {
      get { return factorPrecision_; }
      set {
        factorPrecision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FactorAndSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FactorAndSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FactorType != other.FactorType) return false;
      if (FactorUnit != other.FactorUnit) return false;
      if (FactorSource != other.FactorSource) return false;
      if (!object.Equals(FactorPrecision, other.FactorPrecision)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FactorType != global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown) hash ^= FactorType.GetHashCode();
      if (FactorUnit != global::CarbonCall.Metadata.Unit.TonneCo2E) hash ^= FactorUnit.GetHashCode();
      if (FactorSource.Length != 0) hash ^= FactorSource.GetHashCode();
      if (factorPrecision_ != null) hash ^= FactorPrecision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FactorType != global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FactorType);
      }
      if (FactorUnit != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FactorUnit);
      }
      if (FactorSource.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FactorSource);
      }
      if (factorPrecision_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FactorPrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FactorType != global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FactorType);
      }
      if (FactorUnit != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        output.WriteRawTag(16);
        output.WriteEnum((int) FactorUnit);
      }
      if (FactorSource.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FactorSource);
      }
      if (factorPrecision_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FactorPrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FactorType != global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FactorType);
      }
      if (FactorUnit != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FactorUnit);
      }
      if (FactorSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FactorSource);
      }
      if (factorPrecision_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FactorPrecision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FactorAndSource other) {
      if (other == null) {
        return;
      }
      if (other.FactorType != global::CarbonCall.Metadata.FactorAndSource.Types.FactorType.Unknown) {
        FactorType = other.FactorType;
      }
      if (other.FactorUnit != global::CarbonCall.Metadata.Unit.TonneCo2E) {
        FactorUnit = other.FactorUnit;
      }
      if (other.FactorSource.Length != 0) {
        FactorSource = other.FactorSource;
      }
      if (other.factorPrecision_ != null) {
        if (factorPrecision_ == null) {
          FactorPrecision = new global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix();
        }
        FactorPrecision.MergeFrom(other.FactorPrecision);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FactorType = (global::CarbonCall.Metadata.FactorAndSource.Types.FactorType) input.ReadEnum();
            break;
          }
          case 16: {
            FactorUnit = (global::CarbonCall.Metadata.Unit) input.ReadEnum();
            break;
          }
          case 26: {
            FactorSource = input.ReadString();
            break;
          }
          case 34: {
            if (factorPrecision_ == null) {
              FactorPrecision = new global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix();
            }
            input.ReadMessage(FactorPrecision);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FactorType = (global::CarbonCall.Metadata.FactorAndSource.Types.FactorType) input.ReadEnum();
            break;
          }
          case 16: {
            FactorUnit = (global::CarbonCall.Metadata.Unit) input.ReadEnum();
            break;
          }
          case 26: {
            FactorSource = input.ReadString();
            break;
          }
          case 34: {
            if (factorPrecision_ == null) {
              FactorPrecision = new global::CarbonCall.Metadata.FactorAndSource.Types.PrecisionMix();
            }
            input.ReadMessage(FactorPrecision);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FactorAndSource message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum FactorType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("ESTIMATED")] Estimated = 1,
        [pbr::OriginalName("FACTORED")] Factored = 2,
        [pbr::OriginalName("MEASURED")] Measured = 3,
      }

      public sealed partial class PrecisionMix : pb::IMessage<PrecisionMix>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PrecisionMix> _parser = new pb::MessageParser<PrecisionMix>(() => new PrecisionMix());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PrecisionMix> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::CarbonCall.Metadata.FactorAndSource.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PrecisionMix() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PrecisionMix(PrecisionMix other) : this() {
          low_ = other.low_;
          medium_ = other.medium_;
          high_ = other.high_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PrecisionMix Clone() {
          return new PrecisionMix(this);
        }

        /// <summary>Field number for the "low" field.</summary>
        public const int LowFieldNumber = 1;
        private int low_;
        /// <summary>
        ///percentage of estimated or factored precision, 10 = 10%
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Low {
          get { return low_; }
          set {
            low_ = value;
          }
        }

        /// <summary>Field number for the "medium" field.</summary>
        public const int MediumFieldNumber = 2;
        private int medium_;
        /// <summary>
        ///percentage of indirect high quality precision, 20 = 20%
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Medium {
          get { return medium_; }
          set {
            medium_ = value;
          }
        }

        /// <summary>Field number for the "high" field.</summary>
        public const int HighFieldNumber = 3;
        private int high_;
        /// <summary>
        ///percentage of direct highly accurate measurements, typically from sensors, 50 = 50%
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int High {
          get { return high_; }
          set {
            high_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PrecisionMix);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PrecisionMix other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Low != other.Low) return false;
          if (Medium != other.Medium) return false;
          if (High != other.High) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Low != 0) hash ^= Low.GetHashCode();
          if (Medium != 0) hash ^= Medium.GetHashCode();
          if (High != 0) hash ^= High.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Low != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Low);
          }
          if (Medium != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Medium);
          }
          if (High != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(High);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Low != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Low);
          }
          if (Medium != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Medium);
          }
          if (High != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(High);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Low != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Low);
          }
          if (Medium != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Medium);
          }
          if (High != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(High);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PrecisionMix other) {
          if (other == null) {
            return;
          }
          if (other.Low != 0) {
            Low = other.Low;
          }
          if (other.Medium != 0) {
            Medium = other.Medium;
          }
          if (other.High != 0) {
            High = other.High;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Low = input.ReadInt32();
                break;
              }
              case 16: {
                Medium = input.ReadInt32();
                break;
              }
              case 24: {
                High = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Low = input.ReadInt32();
                break;
              }
              case 16: {
                Medium = input.ReadInt32();
                break;
              }
              case 24: {
                High = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class Methodology : pb::IMessage<Methodology>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Methodology> _parser = new pb::MessageParser<Methodology>(() => new Methodology());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Methodology> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Methodology() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Methodology(Methodology other) : this() {
      methodologyType_ = other.methodologyType_;
      percentageOfTotalPortfolioReported_ = other.percentageOfTotalPortfolioReported_;
      percentageOfEstimatedCalculations_ = other.percentageOfEstimatedCalculations_;
      boundaryApproach_ = other.boundaryApproach_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Methodology Clone() {
      return new Methodology(this);
    }

    /// <summary>Field number for the "methodology_type" field.</summary>
    public const int MethodologyTypeFieldNumber = 1;
    private global::CarbonCall.Metadata.Methodology.Types.MethodologyType methodologyType_ = global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Methodology.Types.MethodologyType MethodologyType {
      get { return methodologyType_; }
      set {
        methodologyType_ = value;
      }
    }

    /// <summary>Field number for the "percentage_of_total_portfolio_reported" field.</summary>
    public const int PercentageOfTotalPortfolioReportedFieldNumber = 2;
    private string percentageOfTotalPortfolioReported_ = "";
    /// <summary>
    ///% of total portfolio scope 1, scope 2, and scope 3 emissions reported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PercentageOfTotalPortfolioReported {
      get { return percentageOfTotalPortfolioReported_; }
      set {
        percentageOfTotalPortfolioReported_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "percentage_of_estimated_calculations" field.</summary>
    public const int PercentageOfEstimatedCalculationsFieldNumber = 3;
    private string percentageOfEstimatedCalculations_ = "";
    /// <summary>
    ///% of reported scope1, scope2, &amp; scope3 emissions calculated based on actual data vs. estimated data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PercentageOfEstimatedCalculations {
      get { return percentageOfEstimatedCalculations_; }
      set {
        percentageOfEstimatedCalculations_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boundary_approach" field.</summary>
    public const int BoundaryApproachFieldNumber = 4;
    private global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach boundaryApproach_ = global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach BoundaryApproach {
      get { return boundaryApproach_; }
      set {
        boundaryApproach_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Methodology);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Methodology other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MethodologyType != other.MethodologyType) return false;
      if (PercentageOfTotalPortfolioReported != other.PercentageOfTotalPortfolioReported) return false;
      if (PercentageOfEstimatedCalculations != other.PercentageOfEstimatedCalculations) return false;
      if (BoundaryApproach != other.BoundaryApproach) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MethodologyType != global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown) hash ^= MethodologyType.GetHashCode();
      if (PercentageOfTotalPortfolioReported.Length != 0) hash ^= PercentageOfTotalPortfolioReported.GetHashCode();
      if (PercentageOfEstimatedCalculations.Length != 0) hash ^= PercentageOfEstimatedCalculations.GetHashCode();
      if (BoundaryApproach != global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl) hash ^= BoundaryApproach.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MethodologyType != global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MethodologyType);
      }
      if (PercentageOfTotalPortfolioReported.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PercentageOfTotalPortfolioReported);
      }
      if (PercentageOfEstimatedCalculations.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PercentageOfEstimatedCalculations);
      }
      if (BoundaryApproach != global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BoundaryApproach);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MethodologyType != global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MethodologyType);
      }
      if (PercentageOfTotalPortfolioReported.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PercentageOfTotalPortfolioReported);
      }
      if (PercentageOfEstimatedCalculations.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PercentageOfEstimatedCalculations);
      }
      if (BoundaryApproach != global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl) {
        output.WriteRawTag(32);
        output.WriteEnum((int) BoundaryApproach);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MethodologyType != global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MethodologyType);
      }
      if (PercentageOfTotalPortfolioReported.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PercentageOfTotalPortfolioReported);
      }
      if (PercentageOfEstimatedCalculations.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PercentageOfEstimatedCalculations);
      }
      if (BoundaryApproach != global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BoundaryApproach);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Methodology other) {
      if (other == null) {
        return;
      }
      if (other.MethodologyType != global::CarbonCall.Metadata.Methodology.Types.MethodologyType.Unknown) {
        MethodologyType = other.MethodologyType;
      }
      if (other.PercentageOfTotalPortfolioReported.Length != 0) {
        PercentageOfTotalPortfolioReported = other.PercentageOfTotalPortfolioReported;
      }
      if (other.PercentageOfEstimatedCalculations.Length != 0) {
        PercentageOfEstimatedCalculations = other.PercentageOfEstimatedCalculations;
      }
      if (other.BoundaryApproach != global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach.OperationalControl) {
        BoundaryApproach = other.BoundaryApproach;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MethodologyType = (global::CarbonCall.Metadata.Methodology.Types.MethodologyType) input.ReadEnum();
            break;
          }
          case 18: {
            PercentageOfTotalPortfolioReported = input.ReadString();
            break;
          }
          case 26: {
            PercentageOfEstimatedCalculations = input.ReadString();
            break;
          }
          case 32: {
            BoundaryApproach = (global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MethodologyType = (global::CarbonCall.Metadata.Methodology.Types.MethodologyType) input.ReadEnum();
            break;
          }
          case 18: {
            PercentageOfTotalPortfolioReported = input.ReadString();
            break;
          }
          case 26: {
            PercentageOfEstimatedCalculations = input.ReadString();
            break;
          }
          case 32: {
            BoundaryApproach = (global::CarbonCall.Metadata.Methodology.Types.BoundaryApproach) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Methodology message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum MethodologyType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("GHG_PROTOCOL")] GhgProtocol = 1,
        [pbr::OriginalName("ISO_14067")] Iso14067 = 2,
        [pbr::OriginalName("OTHER")] Other = 100,
      }

      public enum BoundaryApproach {
        [pbr::OriginalName("OPERATIONAL_CONTROL")] OperationalControl = 0,
        [pbr::OriginalName("FINANCIAL_CONTROL")] FinancialControl = 1,
        [pbr::OriginalName("EQUITY_SHARE")] EquityShare = 2,
      }

    }
    #endregion

  }

  public sealed partial class Goverance : pb::IMessage<Goverance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Goverance> _parser = new pb::MessageParser<Goverance>(() => new Goverance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Goverance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Goverance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Goverance(Goverance other) : this() {
      intendedUse_ = other.intendedUse_;
      restrictedAccess_ = other.restrictedAccess_;
      reportOwner_ = other.reportOwner_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Goverance Clone() {
      return new Goverance(this);
    }

    /// <summary>Field number for the "intended_use" field.</summary>
    public const int IntendedUseFieldNumber = 1;
    private string intendedUse_ = "";
    /// <summary>
    ///how the report is intended to be used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IntendedUse {
      get { return intendedUse_; }
      set {
        intendedUse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restricted_access" field.</summary>
    public const int RestrictedAccessFieldNumber = 2;
    private bool restrictedAccess_;
    /// <summary>
    ///whether the report is restricted access
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RestrictedAccess {
      get { return restrictedAccess_; }
      set {
        restrictedAccess_ = value;
      }
    }

    /// <summary>Field number for the "report_owner" field.</summary>
    public const int ReportOwnerFieldNumber = 3;
    private string reportOwner_ = "";
    /// <summary>
    ///Id of the report owner
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReportOwner {
      get { return reportOwner_; }
      set {
        reportOwner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Goverance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Goverance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IntendedUse != other.IntendedUse) return false;
      if (RestrictedAccess != other.RestrictedAccess) return false;
      if (ReportOwner != other.ReportOwner) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IntendedUse.Length != 0) hash ^= IntendedUse.GetHashCode();
      if (RestrictedAccess != false) hash ^= RestrictedAccess.GetHashCode();
      if (ReportOwner.Length != 0) hash ^= ReportOwner.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IntendedUse.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IntendedUse);
      }
      if (RestrictedAccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(RestrictedAccess);
      }
      if (ReportOwner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IntendedUse.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(IntendedUse);
      }
      if (RestrictedAccess != false) {
        output.WriteRawTag(16);
        output.WriteBool(RestrictedAccess);
      }
      if (ReportOwner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReportOwner);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IntendedUse.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IntendedUse);
      }
      if (RestrictedAccess != false) {
        size += 1 + 1;
      }
      if (ReportOwner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReportOwner);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Goverance other) {
      if (other == null) {
        return;
      }
      if (other.IntendedUse.Length != 0) {
        IntendedUse = other.IntendedUse;
      }
      if (other.RestrictedAccess != false) {
        RestrictedAccess = other.RestrictedAccess;
      }
      if (other.ReportOwner.Length != 0) {
        ReportOwner = other.ReportOwner;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            IntendedUse = input.ReadString();
            break;
          }
          case 16: {
            RestrictedAccess = input.ReadBool();
            break;
          }
          case 26: {
            ReportOwner = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            IntendedUse = input.ReadString();
            break;
          }
          case 16: {
            RestrictedAccess = input.ReadBool();
            break;
          }
          case 26: {
            ReportOwner = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TimePeriod : pb::IMessage<TimePeriod>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimePeriod> _parser = new pb::MessageParser<TimePeriod>(() => new TimePeriod());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimePeriod> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePeriod() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePeriod(TimePeriod other) : this() {
      startDate_ = other.startDate_;
      endDate_ = other.endDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimePeriod Clone() {
      return new TimePeriod(this);
    }

    /// <summary>Field number for the "start_date" field.</summary>
    public const int StartDateFieldNumber = 1;
    private string startDate_ = "";
    /// <summary>
    ///ISO 8601 date format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StartDate {
      get { return startDate_; }
      set {
        startDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_date" field.</summary>
    public const int EndDateFieldNumber = 2;
    private string endDate_ = "";
    /// <summary>
    ///ISO 8601 date format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EndDate {
      get { return endDate_; }
      set {
        endDate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimePeriod);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimePeriod other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartDate != other.StartDate) return false;
      if (EndDate != other.EndDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartDate.Length != 0) hash ^= StartDate.GetHashCode();
      if (EndDate.Length != 0) hash ^= EndDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartDate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartDate.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StartDate);
      }
      if (EndDate.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EndDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartDate);
      }
      if (EndDate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimePeriod other) {
      if (other == null) {
        return;
      }
      if (other.StartDate.Length != 0) {
        StartDate = other.StartDate;
      }
      if (other.EndDate.Length != 0) {
        EndDate = other.EndDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18: {
            EndDate = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            StartDate = input.ReadString();
            break;
          }
          case 18: {
            EndDate = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Includes GNSS and or GeographicArea as GeoJson, Kml as string or file
  /// </summary>
  public sealed partial class GeographicLocation : pb::IMessage<GeographicLocation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeographicLocation> _parser = new pb::MessageParser<GeographicLocation>(() => new GeographicLocation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GeographicLocation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeographicLocation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeographicLocation(GeographicLocation other) : this() {
      longitude_ = other.longitude_;
      latitude_ = other.latitude_;
      geoJsonOrKml_ = other.geoJsonOrKml_;
      geographicLocationFile_ = other.geographicLocationFile_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeographicLocation Clone() {
      return new GeographicLocation(this);
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 1;
    private string longitude_ = "";
    /// <summary>
    ///longitude in Decimal Degrees (DD)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Longitude {
      get { return longitude_; }
      set {
        longitude_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private string latitude_ = "";
    /// <summary>
    ///latitude in Decimal Degrees (DD)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Latitude {
      get { return latitude_; }
      set {
        latitude_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "geo_json_or_kml" field.</summary>
    public const int GeoJsonOrKmlFieldNumber = 3;
    private string geoJsonOrKml_ = "";
    /// <summary>
    ///geojson or kml
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GeoJsonOrKml {
      get { return geoJsonOrKml_; }
      set {
        geoJsonOrKml_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "geographic_location_file" field.</summary>
    public const int GeographicLocationFileFieldNumber = 4;
    private string geographicLocationFile_ = "";
    /// <summary>
    ///link to a file containing geojson, kml or other geographic area data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GeographicLocationFile {
      get { return geographicLocationFile_; }
      set {
        geographicLocationFile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GeographicLocation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GeographicLocation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Longitude != other.Longitude) return false;
      if (Latitude != other.Latitude) return false;
      if (GeoJsonOrKml != other.GeoJsonOrKml) return false;
      if (GeographicLocationFile != other.GeographicLocationFile) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Longitude.Length != 0) hash ^= Longitude.GetHashCode();
      if (Latitude.Length != 0) hash ^= Latitude.GetHashCode();
      if (GeoJsonOrKml.Length != 0) hash ^= GeoJsonOrKml.GetHashCode();
      if (GeographicLocationFile.Length != 0) hash ^= GeographicLocationFile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Longitude.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Longitude);
      }
      if (Latitude.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Latitude);
      }
      if (GeoJsonOrKml.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GeoJsonOrKml);
      }
      if (GeographicLocationFile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GeographicLocationFile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Longitude.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Longitude);
      }
      if (Latitude.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Latitude);
      }
      if (GeoJsonOrKml.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GeoJsonOrKml);
      }
      if (GeographicLocationFile.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GeographicLocationFile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Longitude.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Longitude);
      }
      if (Latitude.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Latitude);
      }
      if (GeoJsonOrKml.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeoJsonOrKml);
      }
      if (GeographicLocationFile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeographicLocationFile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GeographicLocation other) {
      if (other == null) {
        return;
      }
      if (other.Longitude.Length != 0) {
        Longitude = other.Longitude;
      }
      if (other.Latitude.Length != 0) {
        Latitude = other.Latitude;
      }
      if (other.GeoJsonOrKml.Length != 0) {
        GeoJsonOrKml = other.GeoJsonOrKml;
      }
      if (other.GeographicLocationFile.Length != 0) {
        GeographicLocationFile = other.GeographicLocationFile;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Longitude = input.ReadString();
            break;
          }
          case 18: {
            Latitude = input.ReadString();
            break;
          }
          case 26: {
            GeoJsonOrKml = input.ReadString();
            break;
          }
          case 34: {
            GeographicLocationFile = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Longitude = input.ReadString();
            break;
          }
          case 18: {
            Latitude = input.ReadString();
            break;
          }
          case 26: {
            GeoJsonOrKml = input.ReadString();
            break;
          }
          case 34: {
            GeographicLocationFile = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Metatag : pb::IMessage<Metatag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metatag> _parser = new pb::MessageParser<Metatag>(() => new Metatag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Metatag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metatag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metatag(Metatag other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      relatedMetadata_ = other.relatedMetadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metatag Clone() {
      return new Metatag(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_metadata" field.</summary>
    public const int RelatedMetadataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Metalink> _repeated_relatedMetadata_codec
        = pb::FieldCodec.ForMessage(26, global::CarbonCall.Metadata.Metalink.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> relatedMetadata_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Metalink>();
    /// <summary>
    ///links to related metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> RelatedMetadata {
      get { return relatedMetadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Metatag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Metatag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if(!relatedMetadata_.Equals(other.relatedMetadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      hash ^= relatedMetadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      relatedMetadata_.WriteTo(output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      relatedMetadata_.WriteTo(ref output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      size += relatedMetadata_.CalculateSize(_repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Metatag other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      relatedMetadata_.Add(other.relatedMetadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            relatedMetadata_.AddEntriesFrom(input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            relatedMetadata_.AddEntriesFrom(ref input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PropertyContext : pb::IMessage<PropertyContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PropertyContext> _parser = new pb::MessageParser<PropertyContext>(() => new PropertyContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PropertyContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropertyContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropertyContext(PropertyContext other) : this() {
      propertyName_ = other.propertyName_;
      metatags_ = other.metatags_.Clone();
      relatedMetadata_ = other.relatedMetadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PropertyContext Clone() {
      return new PropertyContext(this);
    }

    /// <summary>Field number for the "property_name" field.</summary>
    public const int PropertyNameFieldNumber = 1;
    private string propertyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PropertyName {
      get { return propertyName_; }
      set {
        propertyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metatags" field.</summary>
    public const int MetatagsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Metatag> _repeated_metatags_codec
        = pb::FieldCodec.ForMessage(18, global::CarbonCall.Metadata.Metatag.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Metatag> metatags_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Metatag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Metatag> Metatags {
      get { return metatags_; }
    }

    /// <summary>Field number for the "related_metadata" field.</summary>
    public const int RelatedMetadataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::CarbonCall.Metadata.Metalink> _repeated_relatedMetadata_codec
        = pb::FieldCodec.ForMessage(26, global::CarbonCall.Metadata.Metalink.Parser);
    private readonly pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> relatedMetadata_ = new pbc::RepeatedField<global::CarbonCall.Metadata.Metalink>();
    /// <summary>
    ///links to related metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::CarbonCall.Metadata.Metalink> RelatedMetadata {
      get { return relatedMetadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PropertyContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PropertyContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PropertyName != other.PropertyName) return false;
      if(!metatags_.Equals(other.metatags_)) return false;
      if(!relatedMetadata_.Equals(other.relatedMetadata_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PropertyName.Length != 0) hash ^= PropertyName.GetHashCode();
      hash ^= metatags_.GetHashCode();
      hash ^= relatedMetadata_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PropertyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PropertyName);
      }
      metatags_.WriteTo(output, _repeated_metatags_codec);
      relatedMetadata_.WriteTo(output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PropertyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PropertyName);
      }
      metatags_.WriteTo(ref output, _repeated_metatags_codec);
      relatedMetadata_.WriteTo(ref output, _repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PropertyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PropertyName);
      }
      size += metatags_.CalculateSize(_repeated_metatags_codec);
      size += relatedMetadata_.CalculateSize(_repeated_relatedMetadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PropertyContext other) {
      if (other == null) {
        return;
      }
      if (other.PropertyName.Length != 0) {
        PropertyName = other.PropertyName;
      }
      metatags_.Add(other.metatags_);
      relatedMetadata_.Add(other.relatedMetadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PropertyName = input.ReadString();
            break;
          }
          case 18: {
            metatags_.AddEntriesFrom(input, _repeated_metatags_codec);
            break;
          }
          case 26: {
            relatedMetadata_.AddEntriesFrom(input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PropertyName = input.ReadString();
            break;
          }
          case 18: {
            metatags_.AddEntriesFrom(ref input, _repeated_metatags_codec);
            break;
          }
          case 26: {
            relatedMetadata_.AddEntriesFrom(ref input, _repeated_relatedMetadata_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///TODO: add more here about linking metadata with other data in other contexts
  /// </summary>
  public sealed partial class Metalink : pb::IMessage<Metalink>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Metalink> _parser = new pb::MessageParser<Metalink>(() => new Metalink());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Metalink> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metalink() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metalink(Metalink other) : this() {
      relatedMetadataPath_ = other.relatedMetadataPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Metalink Clone() {
      return new Metalink(this);
    }

    /// <summary>Field number for the "related_metadata_path" field.</summary>
    public const int RelatedMetadataPathFieldNumber = 1;
    private string relatedMetadataPath_ = "";
    /// <summary>
    ///path in the metadata json tree to the related metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelatedMetadataPath {
      get { return relatedMetadataPath_; }
      set {
        relatedMetadataPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Metalink);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Metalink other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RelatedMetadataPath != other.RelatedMetadataPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RelatedMetadataPath.Length != 0) hash ^= RelatedMetadataPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RelatedMetadataPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RelatedMetadataPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RelatedMetadataPath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RelatedMetadataPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RelatedMetadataPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedMetadataPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Metalink other) {
      if (other == null) {
        return;
      }
      if (other.RelatedMetadataPath.Length != 0) {
        RelatedMetadataPath = other.RelatedMetadataPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RelatedMetadataPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RelatedMetadataPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///A metadata extension that has a Json Schema
  /// </summary>
  public sealed partial class MetadataExtension : pb::IMessage<MetadataExtension>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetadataExtension> _parser = new pb::MessageParser<MetadataExtension>(() => new MetadataExtension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MetadataExtension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataExtension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataExtension(MetadataExtension other) : this() {
      dataSchema_ = other.dataSchema_;
      documentation_ = other.documentation_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MetadataExtension Clone() {
      return new MetadataExtension(this);
    }

    /// <summary>Field number for the "dataSchema" field.</summary>
    public const int DataSchemaFieldNumber = 1;
    private string dataSchema_ = "";
    /// <summary>
    ///the URI/URL to the Json Schema for the extension
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DataSchema {
      get { return dataSchema_; }
      set {
        dataSchema_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "documentation" field.</summary>
    public const int DocumentationFieldNumber = 2;
    private string documentation_ = "";
    /// <summary>
    ///optional documentation url of the extension
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Documentation {
      get { return documentation_; }
      set {
        documentation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private string data_ = "";
    /// <summary>
    ///the data of the extension, must be valid against the Json Schema
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MetadataExtension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MetadataExtension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSchema != other.DataSchema) return false;
      if (Documentation != other.Documentation) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSchema.Length != 0) hash ^= DataSchema.GetHashCode();
      if (Documentation.Length != 0) hash ^= Documentation.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DataSchema.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DataSchema);
      }
      if (Documentation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Documentation);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DataSchema.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DataSchema);
      }
      if (Documentation.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Documentation);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DataSchema.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataSchema);
      }
      if (Documentation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Documentation);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MetadataExtension other) {
      if (other == null) {
        return;
      }
      if (other.DataSchema.Length != 0) {
        DataSchema = other.DataSchema;
      }
      if (other.Documentation.Length != 0) {
        Documentation = other.Documentation;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSchema = input.ReadString();
            break;
          }
          case 18: {
            Documentation = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DataSchema = input.ReadString();
            break;
          }
          case 18: {
            Documentation = input.ReadString();
            break;
          }
          case 26: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Industry : pb::IMessage<Industry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Industry> _parser = new pb::MessageParser<Industry>(() => new Industry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Industry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CarbonCall.Metadata.MetadataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Industry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Industry(Industry other) : this() {
      prefix_ = other.prefix_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Industry Clone() {
      return new Industry(this);
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 1;
    private global::CarbonCall.Metadata.IndustryCodePrefix prefix_ = global::CarbonCall.Metadata.IndustryCodePrefix.ISIC;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::CarbonCall.Metadata.IndustryCodePrefix Prefix {
      get { return prefix_; }
      set {
        prefix_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Industry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Industry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Prefix != other.Prefix) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Prefix != global::CarbonCall.Metadata.IndustryCodePrefix.ISIC) hash ^= Prefix.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Prefix != global::CarbonCall.Metadata.IndustryCodePrefix.ISIC) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Prefix);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Prefix != global::CarbonCall.Metadata.IndustryCodePrefix.ISIC) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Prefix);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Prefix != global::CarbonCall.Metadata.IndustryCodePrefix.ISIC) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Prefix);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Industry other) {
      if (other == null) {
        return;
      }
      if (other.Prefix != global::CarbonCall.Metadata.IndustryCodePrefix.ISIC) {
        Prefix = other.Prefix;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Prefix = (global::CarbonCall.Metadata.IndustryCodePrefix) input.ReadEnum();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Prefix = (global::CarbonCall.Metadata.IndustryCodePrefix) input.ReadEnum();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
